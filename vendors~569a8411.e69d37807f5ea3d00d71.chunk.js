(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~569a8411"],{

/***/ "aurelia-animator-css":
/*!*******************************************************************************!*\
  !*** ./node_modules/aurelia-animator-css/dist/es2015/aurelia-animator-css.js ***!
  \*******************************************************************************/
/*! exports provided: CssAnimator, configure */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CssAnimator\", function() { return CssAnimator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"configure\", function() { return configure; });\n/* harmony import */ var aurelia_templating__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-templating */ \"SkM8\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-pal */ \"xIXs\");\n\n\n\nlet CssAnimator = class CssAnimator {\n  constructor() {\n    this.useAnimationDoneClasses = false;\n    this.animationEnteredClass = 'au-entered';\n    this.animationLeftClass = 'au-left';\n    this.isAnimating = false;\n\n    this.verifyKeyframesExist = true;\n  }\n\n  _addMultipleEventListener(el, s, fn) {\n    let evts = s.split(' ');\n    for (let i = 0, ii = evts.length; i < ii; ++i) {\n      el.addEventListener(evts[i], fn, false);\n    }\n  }\n\n  _removeMultipleEventListener(el, s, fn) {\n    let evts = s.split(' ');\n    for (let i = 0, ii = evts.length; i < ii; ++i) {\n      el.removeEventListener(evts[i], fn, false);\n    }\n  }\n\n  _getElementAnimationDelay(element) {\n    let styl = aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].getComputedStyle(element);\n    let prop;\n    let delay;\n\n    if (styl.getPropertyValue('animation-delay')) {\n      prop = 'animation-delay';\n    } else if (styl.getPropertyValue('-webkit-animation-delay')) {\n      prop = '-webkit-animation-delay';\n    } else if (styl.getPropertyValue('-moz-animation-delay')) {\n      prop = '-moz-animation-delay';\n    } else {\n      return 0;\n    }\n\n    delay = styl.getPropertyValue(prop);\n    delay = Number(delay.replace(/[^\\d\\.]/g, ''));\n\n    return delay * 1000;\n  }\n\n  _getElementAnimationNames(element) {\n    let styl = aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].getComputedStyle(element);\n    let prefix;\n\n    if (styl.getPropertyValue('animation-name')) {\n      prefix = '';\n    } else if (styl.getPropertyValue('-webkit-animation-name')) {\n      prefix = '-webkit-';\n    } else if (styl.getPropertyValue('-moz-animation-name')) {\n      prefix = '-moz-';\n    } else {\n      return [];\n    }\n\n    let animationNames = styl.getPropertyValue(prefix + 'animation-name');\n    return animationNames ? animationNames.split(' ') : [];\n  }\n\n  _performSingleAnimate(element, className) {\n    this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].animateBegin, element);\n\n    return this.addClass(element, className, true).then(result => {\n      this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].animateActive, element);\n\n      if (result !== false) {\n        return this.removeClass(element, className, true).then(() => {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].animateDone, element);\n        });\n      }\n\n      return false;\n    }).catch(() => {\n      this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].animateTimeout, element);\n    });\n  }\n\n  _triggerDOMEvent(eventType, element) {\n    let evt = aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].createCustomEvent(eventType, { bubbles: true, cancelable: true, detail: element });\n    aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].dispatchEvent(evt);\n  }\n\n  _animationChangeWithValidKeyframe(animationNames, prevAnimationNames) {\n    let newAnimationNames = animationNames.filter(name => prevAnimationNames.indexOf(name) === -1);\n\n    if (newAnimationNames.length === 0) {\n      return false;\n    }\n\n    if (!this.verifyKeyframesExist) {\n      return true;\n    }\n\n    const keyframesRuleType = window.CSSRule.KEYFRAMES_RULE || window.CSSRule.MOZ_KEYFRAMES_RULE || window.CSSRule.WEBKIT_KEYFRAMES_RULE;\n\n    let styleSheets = document.styleSheets;\n\n    try {\n      for (let i = 0; i < styleSheets.length; ++i) {\n        let cssRules = null;\n\n        try {\n          cssRules = styleSheets[i].cssRules;\n        } catch (e) {}\n\n        if (!cssRules) {\n          continue;\n        }\n\n        for (let j = 0; j < cssRules.length; ++j) {\n          let cssRule = cssRules[j];\n\n          if (cssRule.type === keyframesRuleType) {\n            if (newAnimationNames.indexOf(cssRule.name) !== -1) {\n              return true;\n            }\n          }\n        }\n      }\n    } catch (e) {}\n\n    return false;\n  }\n\n  animate(element, className) {\n    if (Array.isArray(element)) {\n      return Promise.all(element.map(el => {\n        return this._performSingleAnimate(el, className);\n      }));\n    }\n\n    return this._performSingleAnimate(element, className);\n  }\n\n  runSequence(animations) {\n    this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].sequenceBegin, null);\n\n    return animations.reduce((p, anim) => {\n      return p.then(() => {\n        return this.animate(anim.element, anim.className);\n      });\n    }, Promise.resolve(true)).then(() => {\n      this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].sequenceDone, null);\n    });\n  }\n\n  _stateAnim(element, direction, doneClass) {\n    const auClass = 'au-' + direction;\n    const auClassActive = auClass + '-active';\n    return new Promise((resolve, reject) => {\n      const classList = element.classList;\n\n      this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"][direction + 'Begin'], element);\n\n      if (this.useAnimationDoneClasses) {\n        classList.remove(this.animationEnteredClass);\n        classList.remove(this.animationLeftClass);\n      }\n\n      classList.add(auClass);\n      const prevAnimationNames = this._getElementAnimationNames(element);\n\n      let animStart;\n      let animHasStarted = false;\n      this._addMultipleEventListener(element, 'webkitAnimationStart animationstart', animStart = evAnimStart => {\n        if (evAnimStart.target !== element) {\n          return;\n        }\n        animHasStarted = true;\n        this.isAnimating = true;\n\n        this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"][direction + 'Active'], element);\n\n        evAnimStart.stopPropagation();\n\n        evAnimStart.target.removeEventListener(evAnimStart.type, animStart);\n      }, false);\n\n      let animEnd;\n      this._addMultipleEventListener(element, 'webkitAnimationEnd animationend', animEnd = evAnimEnd => {\n        if (!animHasStarted) {\n          return;\n        }\n        if (evAnimEnd.target !== element) {\n          return;\n        }\n\n        evAnimEnd.stopPropagation();\n\n        classList.remove(auClassActive);\n        classList.remove(auClass);\n\n        evAnimEnd.target.removeEventListener(evAnimEnd.type, animEnd);\n\n        if (this.useAnimationDoneClasses && doneClass !== undefined && doneClass !== null) {\n          classList.add(doneClass);\n        }\n\n        this.isAnimating = false;\n        this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"][direction + 'Done'], element);\n\n        resolve(true);\n      }, false);\n\n      const parent = element.parentElement;\n      const attrib = 'data-animator-pending' + direction;\n\n      const cleanupAnimation = () => {\n        const animationNames = this._getElementAnimationNames(element);\n        if (!this._animationChangeWithValidKeyframe(animationNames, prevAnimationNames)) {\n          classList.remove(auClassActive);\n          classList.remove(auClass);\n\n          this._removeMultipleEventListener(element, 'webkitAnimationEnd animationend', animEnd);\n          this._removeMultipleEventListener(element, 'webkitAnimationStart animationstart', animStart);\n\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"][direction + 'Timeout'], element);\n          resolve(false);\n        }\n        parent && parent.setAttribute(attrib, +(parent.getAttribute(attrib) || 1) - 1);\n      };\n\n      if (parent !== null && parent !== undefined && (parent.classList.contains('au-stagger') || parent.classList.contains('au-stagger-' + direction))) {\n        const offset = +(parent.getAttribute(attrib) || 0);\n        parent.setAttribute(attrib, offset + 1);\n        const delay = this._getElementAnimationDelay(parent) * offset;\n        this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].staggerNext, element);\n\n        setTimeout(() => {\n          classList.add(auClassActive);\n          cleanupAnimation();\n        }, delay);\n      } else {\n        classList.add(auClassActive);\n        cleanupAnimation();\n      }\n    });\n  }\n\n  enter(element) {\n    return this._stateAnim(element, 'enter', this.animationEnteredClass);\n  }\n\n  leave(element) {\n    return this._stateAnim(element, 'leave', this.animationLeftClass);\n  }\n\n  removeClass(element, className, suppressEvents = false) {\n    return new Promise((resolve, reject) => {\n      let classList = element.classList;\n\n      if (!classList.contains(className) && !classList.contains(className + '-add')) {\n        resolve(false);\n        return;\n      }\n\n      if (suppressEvents !== true) {\n        this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].removeClassBegin, element);\n      }\n\n      if (classList.contains(className + '-add')) {\n        classList.remove(className + '-add');\n        classList.add(className);\n      }\n\n      classList.remove(className);\n      let prevAnimationNames = this._getElementAnimationNames(element);\n\n      let animStart;\n      let animHasStarted = false;\n      this._addMultipleEventListener(element, 'webkitAnimationStart animationstart', animStart = evAnimStart => {\n        if (evAnimStart.target !== element) {\n          return;\n        }\n        animHasStarted = true;\n        this.isAnimating = true;\n\n        if (suppressEvents !== true) {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].removeClassActive, element);\n        }\n\n        evAnimStart.stopPropagation();\n\n        evAnimStart.target.removeEventListener(evAnimStart.type, animStart);\n      }, false);\n\n      let animEnd;\n      this._addMultipleEventListener(element, 'webkitAnimationEnd animationend', animEnd = evAnimEnd => {\n        if (!animHasStarted) {\n          return;\n        }\n        if (evAnimEnd.target !== element) {\n          return;\n        }\n\n        if (!element.classList.contains(className + '-remove')) {\n          resolve(true);\n        }\n\n        evAnimEnd.stopPropagation();\n\n        classList.remove(className);\n\n        classList.remove(className + '-remove');\n\n        evAnimEnd.target.removeEventListener(evAnimEnd.type, animEnd);\n\n        this.isAnimating = false;\n\n        if (suppressEvents !== true) {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].removeClassDone, element);\n        }\n\n        resolve(true);\n      }, false);\n\n      classList.add(className + '-remove');\n\n      let animationNames = this._getElementAnimationNames(element);\n      if (!this._animationChangeWithValidKeyframe(animationNames, prevAnimationNames)) {\n        classList.remove(className + '-remove');\n        classList.remove(className);\n\n        this._removeMultipleEventListener(element, 'webkitAnimationEnd animationend', animEnd);\n        this._removeMultipleEventListener(element, 'webkitAnimationStart animationstart', animStart);\n\n        if (suppressEvents !== true) {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].removeClassTimeout, element);\n        }\n\n        resolve(false);\n      }\n    });\n  }\n\n  addClass(element, className, suppressEvents = false) {\n    return new Promise((resolve, reject) => {\n      let classList = element.classList;\n\n      if (suppressEvents !== true) {\n        this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].addClassBegin, element);\n      }\n\n      if (classList.contains(className + '-remove')) {\n        classList.remove(className + '-remove');\n        classList.remove(className);\n      }\n\n      let animStart;\n      let animHasStarted = false;\n      this._addMultipleEventListener(element, 'webkitAnimationStart animationstart', animStart = evAnimStart => {\n        if (evAnimStart.target !== element) {\n          return;\n        }\n        animHasStarted = true;\n        this.isAnimating = true;\n\n        if (suppressEvents !== true) {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].addClassActive, element);\n        }\n\n        evAnimStart.stopPropagation();\n\n        evAnimStart.target.removeEventListener(evAnimStart.type, animStart);\n      }, false);\n\n      let animEnd;\n      this._addMultipleEventListener(element, 'webkitAnimationEnd animationend', animEnd = evAnimEnd => {\n        if (!animHasStarted) {\n          return;\n        }\n        if (evAnimEnd.target !== element) {\n          return;\n        }\n\n        if (!element.classList.contains(className + '-add')) {\n          resolve(true);\n        }\n\n        evAnimEnd.stopPropagation();\n\n        classList.add(className);\n\n        classList.remove(className + '-add');\n\n        evAnimEnd.target.removeEventListener(evAnimEnd.type, animEnd);\n\n        this.isAnimating = false;\n\n        if (suppressEvents !== true) {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].addClassDone, element);\n        }\n\n        resolve(true);\n      }, false);\n\n      let prevAnimationNames = this._getElementAnimationNames(element);\n\n      classList.add(className + '-add');\n\n      let animationNames = this._getElementAnimationNames(element);\n      if (!this._animationChangeWithValidKeyframe(animationNames, prevAnimationNames)) {\n        classList.remove(className + '-add');\n        classList.add(className);\n\n        this._removeMultipleEventListener(element, 'webkitAnimationEnd animationend', animEnd);\n        this._removeMultipleEventListener(element, 'webkitAnimationStart animationstart', animStart);\n\n        if (suppressEvents !== true) {\n          this._triggerDOMEvent(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"animationEvent\"].addClassTimeout, element);\n        }\n\n        resolve(false);\n      }\n    });\n  }\n\n};\n\nfunction configure(config, callback) {\n  let animator = config.container.get(CssAnimator);\n  config.container.get(aurelia_templating__WEBPACK_IMPORTED_MODULE_0__[\"TemplatingEngine\"]).configureAnimator(animator);\n  if (typeof callback === 'function') {\n    callback(animator);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-animator-css\n");

/***/ })

}]);