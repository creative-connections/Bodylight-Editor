(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~9aee8284"],{

/***/ "fd9Y":
/*!***************************************************************!*\
  !*** ./node_modules/aurelia-i18n/dist/es2015/aurelia-i18n.js ***!
  \***************************************************************/
/*! exports provided: configure, DfValueConverter, DfBindingBehavior, NfValueConverter, NfBindingBehavior, RtValueConverter, RtBindingBehavior, TValueConverter, TBindingBehavior, TCustomAttribute, TParamsCustomAttribute, I18N_EA_SIGNAL, I18N, RelativeTime, Backend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"configure\", function() { return configure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DfValueConverter\", function() { return DfValueConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DfBindingBehavior\", function() { return DfBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NfValueConverter\", function() { return NfValueConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NfBindingBehavior\", function() { return NfBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RtValueConverter\", function() { return RtValueConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RtBindingBehavior\", function() { return RtBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TValueConverter\", function() { return TValueConverter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TBindingBehavior\", function() { return TBindingBehavior; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TCustomAttribute\", function() { return TCustomAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TParamsCustomAttribute\", function() { return TParamsCustomAttribute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I18N_EA_SIGNAL\", function() { return I18N_EA_SIGNAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I18N\", function() { return I18N; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RelativeTime\", function() { return RelativeTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Backend\", function() { return Backend; });\n/* harmony import */ var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18next */ \"jKim\");\n/* harmony import */ var aurelia_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-logging */ \"KKpb\");\n/* harmony import */ var aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aurelia-dependency-injection */ \"OeXm\");\n/* harmony import */ var aurelia_templating__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aurelia-templating */ \"SkM8\");\n/* harmony import */ var aurelia_metadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! aurelia-metadata */ \"SGXf\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! aurelia-pal */ \"xIXs\");\n/* harmony import */ var aurelia_framework__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! aurelia-framework */ \"aurelia-framework\");\n/* harmony import */ var aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! aurelia-templating-resources */ \"aurelia-templating-resources\");\n/* harmony import */ var aurelia_event_aggregator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! aurelia-event-aggregator */ \"aurelia-event-aggregator\");\n/* harmony import */ var aurelia_binding__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! aurelia-binding */ \"NDtI\");\n\n\n\n\n\n\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nconst I18N_EA_SIGNAL = \"i18n:locale:changed\";\nclass I18N {\n    constructor(ea, signaler) {\n        this.ea = ea;\n        this.signaler = signaler;\n        this.globalVars = {};\n        this.i18next = i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        this.Intl = aurelia_pal__WEBPACK_IMPORTED_MODULE_5__[\"PLATFORM\"].global.Intl;\n    }\n    static inject() { return [aurelia_event_aggregator__WEBPACK_IMPORTED_MODULE_8__[\"EventAggregator\"], aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_7__[\"BindingSignaler\"]]; }\n    setup(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const defaultOptions = {\n                skipTranslationOnMissingKey: false,\n                compatibilityJSON: \"v1\",\n                lng: \"en\",\n                attributes: [\"t\", \"i18n\"],\n                fallbackLng: \"en\",\n                debug: false\n            };\n            this.i18nextDeferred = new Promise((resolve, reject) => {\n                this.i18next.init(options || defaultOptions, (err) => {\n                    if (err && !Array.isArray(err)) {\n                        reject(err);\n                    }\n                    // make sure attributes is an array in case a string was provided\n                    if (this.i18next.options.attributes instanceof String) {\n                        this.i18next.options.attributes = [this.i18next.options.attributes];\n                    }\n                    resolve(this.i18next);\n                });\n            });\n            return this.i18nextDeferred;\n        });\n    }\n    i18nextReady() {\n        return this.i18nextDeferred;\n    }\n    setLocale(locale) {\n        return new Promise((resolve, reject) => {\n            const oldLocale = this.getLocale();\n            this.i18next.changeLanguage(locale, (err, tr) => {\n                if (err) {\n                    reject(err);\n                }\n                this.ea.publish(I18N_EA_SIGNAL, { oldValue: oldLocale, newValue: locale });\n                this.signaler.signal(\"aurelia-translation-signal\");\n                resolve(tr);\n            });\n        });\n    }\n    getLocale() {\n        return this.i18next.language;\n    }\n    nf(options, locales) {\n        return new this.Intl.NumberFormat(locales || this.getLocale(), options || {});\n    }\n    uf(numberLike, locale) {\n        const nf = this.nf({}, locale || this.getLocale());\n        const comparer = nf.format(10000 / 3);\n        let thousandSeparator = comparer[1];\n        const decimalSeparator = comparer[5];\n        if (thousandSeparator === \".\") {\n            thousandSeparator = \"\\\\.\";\n        }\n        // remove all thousand seperators\n        const result = numberLike.replace(new RegExp(thousandSeparator, \"g\"), \"\")\n            // remove non-numeric signs except -> , .\n            .replace(/[^\\d.,-]/g, \"\")\n            // replace original decimalSeparator with english one\n            .replace(decimalSeparator, \".\");\n        // return real number\n        return Number(result);\n    }\n    df(options, locales) {\n        return new this.Intl.DateTimeFormat(locales || this.getLocale(), options);\n    }\n    tr(key, options) {\n        let fullOptions = this.globalVars;\n        if (options !== undefined) {\n            fullOptions = Object.assign(Object.assign({}, this.globalVars), options);\n        }\n        return this.i18next.t(key, fullOptions);\n    }\n    registerGlobalVariable(key, value) {\n        this.globalVars[key] = value;\n    }\n    unregisterGlobalVariable(key) {\n        delete this.globalVars[key];\n    }\n    /**\n     * Scans an element for children that have a translation attribute and\n     * updates their innerHTML with the current translation values.\n     *\n     * If an image is encountered the translated value will be applied to the src attribute.\n     *\n     * @param el    HTMLElement to search within\n     */\n    updateTranslations(el) {\n        if (!el || !el.querySelectorAll) {\n            return;\n        }\n        let i;\n        let l;\n        // create a selector from the specified attributes to look for\n        // var selector = [].concat(this.i18next.options.attributes);\n        const attributes = this.i18next.options.attributes;\n        let selector = [].concat(attributes);\n        for (i = 0, l = selector.length; i < l; i++) {\n            selector[i] = \"[\" + selector[i] + \"]\";\n        }\n        selector = selector.join(\",\");\n        // get the nodes\n        const nodes = el.querySelectorAll(selector);\n        for (i = 0, l = nodes.length; i < l; i++) {\n            const node = nodes[i];\n            let keys;\n            let params;\n            // test every attribute and get the first one that has a value\n            for (let i2 = 0, l2 = attributes.length; i2 < l2; i2++) {\n                keys = node.getAttribute(attributes[i2]);\n                const pname = attributes[i2] + \"-params\";\n                if (pname && node.au && node.au[pname]) {\n                    params = node.au[pname].viewModel.value;\n                }\n                if (keys) {\n                    break;\n                }\n            }\n            // skip if nothing was found\n            if (!keys) {\n                continue;\n            }\n            // split the keys into multiple keys separated by a ;\n            this.updateValue(node, keys, params);\n        }\n    }\n    updateValue(node, value, params) {\n        if (value === null || value === undefined) {\n            value = \"\";\n        }\n        const keys = value.toString().split(\";\");\n        let i = keys.length;\n        while (i--) {\n            let key = keys[i];\n            // remove the optional attribute\n            const re = /\\[([a-z\\-, ]*)\\]/ig;\n            let m;\n            let attr = \"text\";\n            // set default attribute to src if this is an image node\n            if (node.nodeName === \"IMG\") {\n                attr = \"src\";\n            }\n            // check if a attribute was specified in the key\n            // tslint:disable-next-line:no-conditional-assignment\n            while ((m = re.exec(key)) !== null) {\n                if (m.index === re.lastIndex) {\n                    re.lastIndex++;\n                }\n                if (m) {\n                    key = key.replace(m[0], \"\");\n                    attr = m[1];\n                }\n            }\n            const attrs = attr.split(\",\");\n            let j = attrs.length;\n            while (j--) {\n                attr = attrs[j].trim();\n                if (!node._textContent) {\n                    node._textContent = node.textContent;\n                }\n                if (!node._innerHTML) {\n                    node._innerHTML = node.innerHTML;\n                }\n                // convert to camelCase\n                // tslint:disable-next-line:only-arrow-functions\n                const attrCC = attr.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n                const reservedNames = [\"prepend\", \"append\", \"text\", \"html\"];\n                const i18nLogger = Object(aurelia_logging__WEBPACK_IMPORTED_MODULE_1__[\"getLogger\"])(\"i18n\");\n                if (reservedNames.indexOf(attr) > -1 &&\n                    node.au &&\n                    node.au.controller &&\n                    node.au.controller.viewModel &&\n                    attrCC in node.au.controller.viewModel) {\n                    i18nLogger.warn(`Aurelia I18N reserved attribute name\\n\n  [${reservedNames.join(\", \")}]\\n\n  Your custom element has a bindable named ${attr} which is a reserved word.\\n\n  If you'd like Aurelia I18N to translate your bindable instead, please consider giving it another name.`);\n                }\n                if (this.i18next.options.skipTranslationOnMissingKey &&\n                    this.tr(key, params) === key) {\n                    i18nLogger.warn(`Couldn't find translation for key: ${key}`);\n                    return;\n                }\n                // handle various attributes\n                // anything other than text,prepend,append or html will be added as an attribute on the element.\n                switch (attr) {\n                    case \"text\":\n                        const newChild = aurelia_pal__WEBPACK_IMPORTED_MODULE_5__[\"DOM\"].createTextNode(this.tr(key, params));\n                        if (node._newChild && node._newChild.parentNode === node) {\n                            node.removeChild(node._newChild);\n                        }\n                        node._newChild = newChild;\n                        while (node.firstChild) {\n                            node.removeChild(node.firstChild);\n                        }\n                        node.appendChild(node._newChild);\n                        break;\n                    case \"prepend\":\n                        const prependParser = aurelia_pal__WEBPACK_IMPORTED_MODULE_5__[\"DOM\"].createElement(\"div\");\n                        prependParser.innerHTML = this.tr(key, params);\n                        for (let ni = node.childNodes.length - 1; ni >= 0; ni--) {\n                            if (node.childNodes[ni]._prepended) {\n                                node.removeChild(node.childNodes[ni]);\n                            }\n                        }\n                        for (let pi = prependParser.childNodes.length - 1; pi >= 0; pi--) {\n                            prependParser.childNodes[pi]._prepended = true;\n                            if (node.firstChild) {\n                                node.insertBefore(prependParser.childNodes[pi], node.firstChild);\n                            }\n                            else {\n                                node.appendChild(prependParser.childNodes[pi]);\n                            }\n                        }\n                        break;\n                    case \"append\":\n                        const appendParser = aurelia_pal__WEBPACK_IMPORTED_MODULE_5__[\"DOM\"].createElement(\"div\");\n                        appendParser.innerHTML = this.tr(key, params);\n                        for (let ni = node.childNodes.length - 1; ni >= 0; ni--) {\n                            if (node.childNodes[ni]._appended) {\n                                node.removeChild(node.childNodes[ni]);\n                            }\n                        }\n                        while (appendParser.firstChild) {\n                            appendParser.firstChild._appended = true;\n                            node.appendChild(appendParser.firstChild);\n                        }\n                        break;\n                    case \"html\":\n                        node.innerHTML = this.tr(key, params);\n                        break;\n                    default: // normal html attribute\n                        if (node.au &&\n                            node.au.controller &&\n                            node.au.controller.viewModel &&\n                            attrCC in node.au.controller.viewModel) {\n                            node.au.controller.viewModel[attrCC] = this.tr(key, params);\n                        }\n                        else {\n                            node.setAttribute(attr, this.tr(key, params));\n                        }\n                        break;\n                }\n            }\n        }\n    }\n}\n\nlet TBindingBehavior = class TBindingBehavior {\n    constructor(signalBindingBehavior) {\n        this.signalBindingBehavior = signalBindingBehavior;\n    }\n    static inject() { return [aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_7__[\"SignalBindingBehavior\"]]; }\n    bind(binding, source) {\n        // bind the signal behavior\n        this.signalBindingBehavior.bind(binding, source, \"aurelia-translation-signal\");\n        // rewrite the expression to use the TValueConverter.\n        // pass through any args to the binding behavior to the TValueConverter\n        const sourceExpression = binding.sourceExpression;\n        // do create the sourceExpression only once\n        if (sourceExpression.rewritten) {\n            return;\n        }\n        sourceExpression.rewritten = true;\n        const expression = sourceExpression.expression;\n        sourceExpression.expression = new aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"ValueConverter\"](expression, \"t\", sourceExpression.args, [expression, ...sourceExpression.args]);\n    }\n    unbind(binding, source) {\n        // unbind the signal behavior\n        this.signalBindingBehavior.unbind(binding, source);\n    }\n};\nTBindingBehavior = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"bindingBehavior\"])(\"t\")\n], TBindingBehavior);\n\nvar LazyOptional_1;\n// tslint:disable-next-line:only-arrow-functions\nconst isInteger = Number.isInteger || function (value) {\n    return typeof value === \"number\" &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n};\nlet LazyOptional = LazyOptional_1 = class LazyOptional {\n    constructor(key) {\n        this.key = key;\n    }\n    static of(key) {\n        return new LazyOptional_1(key);\n    }\n    get(container) {\n        return () => {\n            if (container.hasResolver(this.key, false)) {\n                return container.get(this.key);\n            }\n            return null;\n        };\n    }\n};\nLazyOptional = LazyOptional_1 = __decorate([\n    Object(aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_2__[\"resolver\"])()\n], LazyOptional);\n\nvar TParamsCustomAttribute_1;\nlet TParamsCustomAttribute = TParamsCustomAttribute_1 = class TParamsCustomAttribute {\n    constructor(element) {\n        this.element = element;\n    }\n    static inject() {\n        return [aurelia_pal__WEBPACK_IMPORTED_MODULE_5__[\"DOM\"].Element];\n    }\n    static configureAliases(aliases) {\n        const r = aurelia_metadata__WEBPACK_IMPORTED_MODULE_4__[\"metadata\"].getOrCreateOwn(aurelia_metadata__WEBPACK_IMPORTED_MODULE_4__[\"metadata\"].resource, aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"HtmlBehaviorResource\"], TParamsCustomAttribute_1);\n        r.aliases = aliases;\n    }\n    valueChanged() { }\n};\nTParamsCustomAttribute = TParamsCustomAttribute_1 = __decorate([\n    Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])(\"t-params\")\n], TParamsCustomAttribute);\n\nvar TCustomAttribute_1;\nlet TCustomAttribute = TCustomAttribute_1 = class TCustomAttribute {\n    constructor(element, service, ea, p) {\n        this.element = element;\n        this.service = service;\n        this.ea = ea;\n        this.lazyParams = p;\n    }\n    static inject() {\n        return [aurelia_pal__WEBPACK_IMPORTED_MODULE_5__[\"DOM\"].Element, I18N, aurelia_event_aggregator__WEBPACK_IMPORTED_MODULE_8__[\"EventAggregator\"], LazyOptional.of(TParamsCustomAttribute)];\n    }\n    static configureAliases(aliases) {\n        const r = aurelia_metadata__WEBPACK_IMPORTED_MODULE_4__[\"metadata\"].getOrCreateOwn(aurelia_metadata__WEBPACK_IMPORTED_MODULE_4__[\"metadata\"].resource, aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"HtmlBehaviorResource\"], TCustomAttribute_1);\n        r.aliases = aliases;\n    }\n    bind() {\n        this.params = this.lazyParams();\n        if (this.params) {\n            this.params.valueChanged = (newParams, oldParams) => {\n                this.paramsChanged(this.value, newParams, oldParams);\n            };\n        }\n        const p = this.params !== null ? this.params.value : undefined;\n        this.subscription = this.ea.subscribe(I18N_EA_SIGNAL, () => {\n            this.service.updateValue(this.element, this.value, this.params !== null ? this.params.value : undefined);\n        });\n        this.service.updateValue(this.element, this.value, p);\n    }\n    paramsChanged(newValue, newParams) {\n        this.service.updateValue(this.element, newValue, newParams);\n    }\n    valueChanged(newValue) {\n        const p = this.params !== null ? this.params.value : undefined;\n        this.service.updateValue(this.element, newValue, p);\n    }\n    unbind() {\n        // If unbind is called before timeout for subscription is triggered, subscription will be undefined\n        if (this.subscription) {\n            this.subscription.dispose();\n        }\n    }\n};\nTCustomAttribute = TCustomAttribute_1 = __decorate([\n    Object(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"customAttribute\"])(\"t\")\n], TCustomAttribute);\n\nlet TValueConverter = class TValueConverter {\n    constructor(service) {\n        this.service = service;\n    }\n    static inject() { return [I18N]; }\n    toView(value, options) {\n        return this.service.tr(value, options);\n    }\n};\nTValueConverter = __decorate([\n    Object(aurelia_framework__WEBPACK_IMPORTED_MODULE_6__[\"valueConverter\"])(\"t\")\n], TValueConverter);\n\nlet NfBindingBehavior = class NfBindingBehavior {\n    constructor(signalBindingBehavior) {\n        this.signalBindingBehavior = signalBindingBehavior;\n    }\n    static inject() { return [aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_7__[\"SignalBindingBehavior\"]]; }\n    bind(binding, source) {\n        // bind the signal behavior\n        this.signalBindingBehavior.bind(binding, source, \"aurelia-translation-signal\");\n        // rewrite the expression to use the NfValueConverter.\n        // pass through any args to the binding behavior to the NfValueConverter\n        const sourceExpression = binding.sourceExpression;\n        // do create the sourceExpression only once\n        if (sourceExpression.rewritten) {\n            return;\n        }\n        sourceExpression.rewritten = true;\n        const expression = sourceExpression.expression;\n        sourceExpression.expression = new aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"ValueConverter\"](expression, \"nf\", sourceExpression.args, [expression, ...sourceExpression.args]);\n    }\n    unbind(binding, source) {\n        // unbind the signal behavior\n        this.signalBindingBehavior.unbind(binding, source);\n    }\n};\nNfBindingBehavior = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"bindingBehavior\"])(\"nf\")\n], NfBindingBehavior);\n\nlet NfValueConverter = class NfValueConverter {\n    constructor(service) {\n        this.service = service;\n    }\n    static inject() { return [I18N]; }\n    toView(value, nfOrOptions, locale) {\n        if (value === null\n            || typeof value === \"undefined\"\n            || (typeof value === \"string\" && value.trim() === \"\")) {\n            return value;\n        }\n        if (nfOrOptions && (nfOrOptions instanceof Intl.NumberFormat && typeof nfOrOptions.format === \"function\")) {\n            return nfOrOptions.format(value);\n        }\n        const nf = this.service.nf(nfOrOptions, locale || this.service.getLocale());\n        return nf.format(value);\n    }\n};\nNfValueConverter = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"valueConverter\"])(\"nf\")\n], NfValueConverter);\n\nlet DfBindingBehavior = class DfBindingBehavior {\n    constructor(signalBindingBehavior) {\n        this.signalBindingBehavior = signalBindingBehavior;\n    }\n    static inject() { return [aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_7__[\"SignalBindingBehavior\"]]; }\n    bind(binding, source) {\n        // bind the signal behavior\n        this.signalBindingBehavior.bind(binding, source, \"aurelia-translation-signal\");\n        // rewrite the expression to use the DfValueConverter.\n        // pass through any args to the binding behavior to the DfValueConverter\n        const sourceExpression = binding.sourceExpression;\n        // do create the sourceExpression only once\n        if (sourceExpression.rewritten) {\n            return;\n        }\n        sourceExpression.rewritten = true;\n        const expression = sourceExpression.expression;\n        sourceExpression.expression = new aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"ValueConverter\"](expression, \"df\", sourceExpression.args, [expression, ...sourceExpression.args]);\n    }\n    unbind(binding, source) {\n        // unbind the signal behavior\n        this.signalBindingBehavior.unbind(binding, source);\n    }\n};\nDfBindingBehavior = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"bindingBehavior\"])(\"df\")\n], DfBindingBehavior);\n\nlet DfValueConverter = class DfValueConverter {\n    constructor(service) {\n        this.service = service;\n    }\n    static inject() { return [I18N]; }\n    toView(value, dfOrOptions, locale) {\n        if (value === null\n            || typeof value === \"undefined\"\n            || (typeof value === \"string\" && value.trim() === \"\")) {\n            return value;\n        }\n        if (typeof value === \"string\" && isNaN(value) && !isInteger(value)) {\n            value = new Date(value);\n        }\n        if (dfOrOptions && (dfOrOptions instanceof Intl.DateTimeFormat && typeof dfOrOptions.format === \"function\")) {\n            return dfOrOptions.format(value);\n        }\n        const df = this.service.df(dfOrOptions, locale || this.service.getLocale());\n        return df.format(value);\n    }\n};\nDfValueConverter = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"valueConverter\"])(\"df\")\n], DfValueConverter);\n\nlet RtBindingBehavior = class RtBindingBehavior {\n    constructor(signalBindingBehavior) {\n        this.signalBindingBehavior = signalBindingBehavior;\n    }\n    static inject() { return [aurelia_templating_resources__WEBPACK_IMPORTED_MODULE_7__[\"SignalBindingBehavior\"]]; }\n    bind(binding, source) {\n        // bind the signal behavior\n        this.signalBindingBehavior.bind(binding, source, \"aurelia-translation-signal\", \"aurelia-relativetime-signal\");\n        // rewrite the expression to use the RtValueConverter.\n        // pass through any args to the binding behavior to the RtValueConverter\n        const sourceExpression = binding.sourceExpression;\n        // do create the sourceExpression only once\n        if (sourceExpression.rewritten) {\n            return;\n        }\n        sourceExpression.rewritten = true;\n        const expression = sourceExpression.expression;\n        sourceExpression.expression = new aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"ValueConverter\"](expression, \"rt\", sourceExpression.args, [expression, ...sourceExpression.args]);\n    }\n    unbind(binding, source) {\n        // unbind the signal behavior\n        this.signalBindingBehavior.unbind(binding, source);\n    }\n};\nRtBindingBehavior = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"bindingBehavior\"])(\"rt\")\n], RtBindingBehavior);\n\nconst translations = {\n    ar: {\n        translation: {\n            now: 'الآن',\n            second_ago: 'قبل ثانية واحدة',\n            second_ago_plural: 'قبل __count__ ثانية',\n            second_in: 'خلال ثانية واحدة',\n            second_in_plural: 'خلال __count__ ثانية',\n            minute_ago: 'قبل دقيقة واحدة',\n            minute_ago_plural: 'قبل __count__ دقيقة',\n            minute_in: 'خلال دقيقة واحدة',\n            minute_in_plural: 'خلال __count__ دقيقة',\n            hour_ago: 'قبل ساعة واحدة',\n            hour_ago_plural: 'قبل __count__ ساعة',\n            hour_in: 'خلال ساعة واحدة',\n            hour_in_plural: 'خلال __count__ ساعة',\n            day_ago: 'قبل يوم واحد',\n            day_ago_plural: 'قبل __count__ يومًا',\n            day_in: 'خلال يوم واحد',\n            day_in_plural: 'خلال __count__ يومًا',\n            month_ago: 'قبل شهر واحد',\n            month_ago_plural: 'قبل __count__ شهرًا',\n            month_in: 'خلال شهر واحد',\n            month_in_plural: 'خلال __count__ شهرًا',\n            year_ago: 'قبل سنة واحدة',\n            year_ago_plural: 'قبل __count__ سنة',\n            year_in: 'خلال سنة واحدة',\n            year_in_plural: 'خلال __count__ سنة'\n        }\n    },\n    da: {\n        translation: {\n            now: 'nu',\n            second_ago: 'for __count__ sekund siden',\n            second_ago_plural: 'for __count__ sekunder siden',\n            second_in: 'om __count__ sekund',\n            second_in_plural: 'om __count__ sekunder',\n            minute_ago: 'for __count__ minut siden',\n            minute_ago_plural: 'for __count__ minutter siden',\n            minute_in: 'om __count__ minut',\n            minute_in_plural: 'om __count__ minutter',\n            hour_ago: 'for __count__ time siden',\n            hour_ago_plural: 'for __count__ timer siden',\n            hour_in: 'om __count__ time',\n            hour_in_plural: 'om __count__ timer',\n            day_ago: 'for __count__ dag siden',\n            day_ago_plural: 'for __count__ dage siden',\n            day_in: 'om __count__ dag',\n            day_in_plural: 'om __count__ dage',\n            month_ago: 'for __count__ måned siden',\n            month_ago_plural: 'for __count__ måneder siden',\n            month_in: 'om __count__ måned',\n            month_in_plural: 'om __count__ måneder',\n            year_ago: 'for __count__ år siden',\n            year_ago_plural: 'for __count__ år siden',\n            year_in: 'om __count__ år',\n            year_in_plural: 'om __count__ år'\n        }\n    },\n    de: {\n        translation: {\n            now: 'jetzt',\n            second_ago: 'vor __count__ Sekunde',\n            second_ago_plural: 'vor __count__ Sekunden',\n            second_in: 'in __count__ Sekunde',\n            second_in_plural: 'in __count__ Sekunden',\n            minute_ago: 'vor __count__ Minute',\n            minute_ago_plural: 'vor __count__ Minuten',\n            minute_in: 'in __count__ Minute',\n            minute_in_plural: 'in __count__ Minuten',\n            hour_ago: 'vor __count__ Stunde',\n            hour_ago_plural: 'vor __count__ Stunden',\n            hour_in: 'in __count__ Stunde',\n            hour_in_plural: 'in __count__ Stunden',\n            day_ago: 'vor __count__ Tag',\n            day_ago_plural: 'vor __count__ Tagen',\n            day_in: 'in __count__ Tag',\n            day_in_plural: 'in __count__ Tagen',\n            month_ago: 'vor __count__ Monat',\n            month_ago_plural: 'vor __count__ Monaten',\n            month_in: 'in __count__ Monat',\n            month_in_plural: 'in __count__ Monaten',\n            year_ago: 'vor __count__ Jahr',\n            year_ago_plural: 'vor __count__ Jahren',\n            year_in: 'in __count__ Jahr',\n            year_in_plural: 'in __count__ Jahren'\n        }\n    },\n    en: {\n        translation: {\n            now: 'now',\n            second_ago: '__count__ second ago',\n            second_ago_plural: '__count__ seconds ago',\n            second_in: 'in __count__ second',\n            second_in_plural: 'in __count__ seconds',\n            minute_ago: '__count__ minute ago',\n            minute_ago_plural: '__count__ minutes ago',\n            minute_in: 'in __count__ minute',\n            minute_in_plural: 'in __count__ minutes',\n            hour_ago: '__count__ hour ago',\n            hour_ago_plural: '__count__ hours ago',\n            hour_in: 'in __count__ hour',\n            hour_in_plural: 'in __count__ hours',\n            day_ago: '__count__ day ago',\n            day_ago_plural: '__count__ days ago',\n            day_in: 'in __count__ day',\n            day_in_plural: 'in __count__ days',\n            month_ago: '__count__ month ago',\n            month_ago_plural: '__count__ months ago',\n            month_in: 'in __count__ month',\n            month_in_plural: 'in __count__ months',\n            year_ago: '__count__ year ago',\n            year_ago_plural: '__count__ years ago',\n            year_in: 'in __count__ year',\n            year_in_plural: 'in __count__ years'\n        }\n    },\n    es: {\n        translation: {\n            now: 'ahora',\n            second_ago: 'hace __count__ segundo',\n            second_ago_plural: 'hace __count__ segundos',\n            second_in: 'dentro de __count__ segundo',\n            second_in_plural: 'dentro de __count__ segundos',\n            minute_ago: 'hace __count__ minuto',\n            minute_ago_plural: 'hace __count__ minutos',\n            minute_in: 'dentro de __count__ minuto',\n            minute_in_plural: 'dentro de __count__ minutos',\n            hour_ago: 'hace __count__ hora',\n            hour_ago_plural: 'hace __count__ horas',\n            hour_in: 'dentro de __count__ hora',\n            hour_in_plural: 'dentro de __count__ horas',\n            day_ago: 'hace __count__ día',\n            day_ago_plural: 'hace __count__ días',\n            day_in: 'dentro de __count__ día',\n            day_in_plural: 'dentro de __count__ días',\n            month_ago: 'hace __count__ mes',\n            month_ago_plural: 'hace __count__ meses',\n            month_in: 'dentro de __count__ mes',\n            month_in_plural: 'dentro de __count__ meses',\n            year_ago: 'hace __count__ año',\n            year_ago_plural: 'hace __count__ años',\n            year_in: 'dentro de __count__ año',\n            year_in_plural: 'dentro de __count__ años'\n        }\n    },\n    fi: {\n        translation: {\n            now: 'nyt',\n            second_ago: '__count__ sekunti sitten',\n            second_ago_plural: '__count__ sekuntia sitten',\n            second_in: '__count__ sekunnin päästä',\n            second_in_plural: '__count__ sekunnin päästä',\n            minute_ago: '__count__ minuutti sitten',\n            minute_ago_plural: '__count__ minuuttia sitten',\n            minute_in: '__count__ minuutin päästä',\n            minute_in_plural: '__count__ minuutin päästä',\n            hour_ago: '__count__ tunti sitten',\n            hour_ago_plural: '__count__ tuntia sitten',\n            hour_in: '__count__ tunnin päästä',\n            hour_in_plural: '__count__ tunnin päästä',\n            day_ago: '__count__ päivä sitten',\n            day_ago_plural: '__count__ päivää sitten',\n            day_in: '__count__ päivän päästä',\n            day_in_plural: '__count__ päivän päästä',\n            month_ago: '__count__ kuukausi sitten',\n            month_ago_plural: '__count__ kuukautta sitten',\n            month_in: '__count__ kuukauden päästä',\n            month_in_plural: '__count__ kuukauden päästä',\n            year_ago: '__count__ vuosi sitten',\n            year_ago_plural: '__count__ vuotta sitten',\n            year_in: '__count__ vuoden päästä',\n            year_in_plural: '__count__ vuoden päästä'\n        }\n    },\n    fr: {\n        translation: {\n            now: 'maintenant',\n            second_ago: 'il y a __count__ seconde',\n            second_ago_plural: 'il y a __count__ secondes',\n            second_in: 'dans __count__ seconde',\n            second_in_plural: 'dans __count__ secondes',\n            minute_ago: 'il y a __count__ minute',\n            minute_ago_plural: 'il y a __count__ minutes',\n            minute_in: 'dans __count__ minute',\n            minute_in_plural: 'dans __count__ minutes',\n            hour_ago: 'il y a __count__ heure',\n            hour_ago_plural: 'il y a __count__ heures',\n            hour_in: 'dans __count__ heure',\n            hour_in_plural: 'dans __count__ heures',\n            day_ago: 'il y a __count__ jour',\n            day_ago_plural: 'il y a __count__ jours',\n            day_in: 'dans __count__ jour',\n            day_in_plural: 'dans __count__ jours',\n            month_ago: 'il y a __count__ mois',\n            month_ago_plural: 'il y a __count__ mois',\n            month_in: 'dans __count__ mois',\n            month_in_plural: 'dans __count__ mois',\n            year_ago: 'il y a __count__ an',\n            year_ago_plural: 'il y a __count__ ans',\n            year_in: 'dans __count__ an',\n            year_in_plural: 'dans __count__ ans'\n        }\n    },\n    it: {\n        translation: {\n            now: 'ora',\n            second_ago: '__count__ secondo fa',\n            second_ago_plural: '__count__ secondi fa',\n            second_in: 'tra __count__ secondo',\n            second_in_plural: 'tra __count__ secondi',\n            minute_ago: '__count__ minuto fa',\n            minute_ago_plural: '__count__ minuti fa',\n            minute_in: 'tra __count__ minuto',\n            minute_in_plural: 'tra __count__ minuti',\n            hour_ago: '__count__ ora fa',\n            hour_ago_plural: '__count__ ore fa',\n            hour_in: 'tra __count__ ora',\n            hour_in_plural: 'tra __count__ ore',\n            day_ago: '__count__ giorno fa',\n            day_ago_plural: '__count__ giorni fa',\n            day_in: 'tra __count__ giorno',\n            day_in_plural: 'tra __count__ giorni',\n            month_ago: '__count__ mese fa',\n            month_ago_plural: '__count__ mesi fa',\n            month_in: 'tra __count__ mese',\n            month_in_plural: 'tra __count__ mesi',\n            year_ago: '__count__ anno fa',\n            year_ago_plural: '__count__ anni fa',\n            year_in: 'tra __count__ anno',\n            year_in_plural: 'tra __count__ anni'\n        }\n    },\n    ja: {\n        translation: {\n            now: '今',\n            second_ago: '__count__ 秒前',\n            second_ago_plural: '__count__ 秒前',\n            second_in: '__count__ 秒後',\n            second_in_plural: '__count__ 秒後',\n            minute_ago: '__count__ 分前',\n            minute_ago_plural: '__count__ 分前',\n            minute_in: '__count__ 分後',\n            minute_in_plural: '__count__ 分後',\n            hour_ago: '__count__ 時間前',\n            hour_ago_plural: '__count__ 時間前',\n            hour_in: '__count__ 時間後',\n            hour_in_plural: '__count__ 時間後',\n            day_ago: '__count__ 日前',\n            day_ago_plural: '__count__ 日前',\n            day_in: '__count__ 日後',\n            day_in_plural: '__count__ 日後',\n            month_ago: '__count__ か月前',\n            month_ago_plural: '__count__ か月前',\n            month_in: '__count__ か月後',\n            month_in_plural: '__count__ か月後',\n            year_ago: '__count__ 年前',\n            year_ago_plural: '__count__ 年前',\n            year_in: '__count__ 年後',\n            year_in_plural: '__count__ 年後'\n        }\n    },\n    lt: {\n        translation: {\n            now: 'dabar',\n            second_ago: 'prieš __count__ sekundę',\n            second_ago_plural: 'prieš __count__ sekundes',\n            second_in: 'po __count__ sekundės',\n            second_in_plural: 'po __count__ sekundžių',\n            minute_ago: 'prieš __count__ minutę',\n            minute_ago_plural: 'prieš __count__ minutes',\n            minute_in: 'po __count__ minutės',\n            minute_in_plural: 'po __count__ minučių',\n            hour_ago: 'prieš __count__ valandą',\n            hour_ago_plural: 'prieš __count__ valandas',\n            hour_in: 'po __count__ valandos',\n            hour_in_plural: 'po __count__ valandų',\n            day_ago: 'prieš __count__ dieną',\n            day_ago_plural: 'prieš __count__ dienas',\n            day_in: 'po __count__ dienos',\n            day_in_plural: 'po __count__ dienų',\n            month_ago: 'prieš __count__ mėnesį',\n            month_ago_plural: 'prieš __count__ mėnesius',\n            month_in: 'po __count__ mėnesio',\n            month_in_plural: 'po __count__ mėnesių',\n            year_ago: 'prieš __count__ metus',\n            year_ago_plural: 'prieš __count__ metus',\n            year_in: 'po __count__ metų',\n            year_in_plural: 'po __count__ metų'\n        }\n    },\n    nl: {\n        translation: {\n            now: 'nu',\n            second_ago: '__count__ seconde geleden',\n            second_ago_plural: '__count__ seconden geleden',\n            second_in: 'over __count__ seconde',\n            second_in_plural: 'over __count__ seconden',\n            minute_ago: '__count__ minuut geleden',\n            minute_ago_plural: '__count__ minuten geleden',\n            minute_in: 'over __count__ minuut',\n            minute_in_plural: 'over __count__ minuten',\n            hour_ago: '__count__ uur geleden',\n            hour_ago_plural: '__count__ uur geleden',\n            hour_in: 'over __count__ uur',\n            hour_in_plural: 'over __count__ uur',\n            day_ago: '__count__ dag geleden',\n            day_ago_plural: '__count__ dagen geleden',\n            day_in: 'over __count__ dag',\n            day_in_plural: 'over __count__ dagen',\n            month_ago: '__count__ maand geleden',\n            month_ago_plural: '__count__ maanden geleden',\n            month_in: 'over __count__ maand',\n            month_in_plural: 'over __count__ maanden',\n            year_ago: '__count__ jaar geleden',\n            year_ago_plural: '__count__ jaar geleden',\n            year_in: 'over __count__ jaar',\n            year_in_plural: 'over __count__ jaar'\n        }\n    },\n    nn: {\n        translation: {\n            now: 'no',\n            second_ago: 'for __count__ sekund sidan',\n            second_ago_plural: 'for __count__ sekund sidan',\n            second_in: 'om __count__ sekund',\n            second_in_plural: 'om __count__ sekund',\n            minute_ago: 'for __count__ minutt sidan',\n            minute_ago_plural: 'for __count__ minutt sidan',\n            minute_in: 'om __count__ minutt',\n            minute_in_plural: 'om __count__ minutt',\n            hour_ago: 'for __count__ time sidan',\n            hour_ago_plural: 'for __count__ timar sidan',\n            hour_in: 'om __count__ time',\n            hour_in_plural: 'om __count__ timar',\n            day_ago: 'for __count__ døgn sidan',\n            day_ago_plural: 'for __count__ døgn sidan',\n            day_in: 'om __count__ døgn',\n            day_in_plural: 'om __count__ døgn',\n            month_ago: 'for __count__ månad sidan',\n            month_ago_plural: 'for __count__ månadar sidan',\n            month_in: 'om __count__ månad',\n            month_in_plural: 'om __count__ månadar',\n            year_ago: 'for __count__ år sidan',\n            year_ago_plural: 'for __count__ år sidan',\n            year_in: 'om __count__ år',\n            year_in_plural: 'om __count__ år'\n        }\n    },\n    nb: {\n        translation: {\n            now: 'nå',\n            second_ago: 'for __count__ sekund siden',\n            second_ago_plural: 'for __count__ sekunder siden',\n            second_in: 'om __count__ sekund',\n            second_in_plural: 'om __count__ sekunder',\n            minute_ago: 'for __count__ minutt siden',\n            minute_ago_plural: 'for __count__ minutter siden',\n            minute_in: 'om __count__ minutt',\n            minute_in_plural: 'om __count__ minutter',\n            hour_ago: 'for __count__ time siden',\n            hour_ago_plural: 'for __count__ timer siden',\n            hour_in: 'om __count__ time',\n            hour_in_plural: 'om __count__ timer',\n            day_ago: 'for __count__ døgn siden',\n            day_ago_plural: 'for __count__ døgn siden',\n            day_in: 'om __count__ døgn',\n            day_in_plural: 'om __count__ døgn',\n            month_ago: 'for __count__ måned siden',\n            month_ago_plural: 'for __count__ måneder siden',\n            month_in: 'om __count__ måned',\n            month_in_plural: 'om __count__ måneder',\n            year_ago: 'for __count__ år siden',\n            year_ago_plural: 'for __count__ år siden',\n            year_in: 'om __count__ år',\n            year_in_plural: 'om __count__ år'\n        }\n    },\n    pl: {\n        translation: {\n            now: 'teraz',\n            second_ago: '__count__ sekundę temu',\n            second_ago_plural: '__count__ sekundy temu',\n            second_in: 'za __count__ sekundę',\n            second_in_plural: 'za __count__ sekundy',\n            minute_ago: '__count__ minutę temu',\n            minute_ago_plural: '__count__ minuty temu',\n            minute_in: 'za __count__ minutę',\n            minute_in_plural: 'za __count__ minuty',\n            hour_ago: '__count__ godzinę temu',\n            hour_ago_plural: '__count__ godziny temu',\n            hour_in: 'za __count__ godzinę',\n            hour_in_plural: 'za __count__ godziny',\n            day_ago: '__count__ dzień temu',\n            day_ago_plural: '__count__ dni temu',\n            day_in: 'za __count__ dzień',\n            day_in_plural: 'za __count__ dni',\n            month_ago: '__count__ miesiąc temu',\n            month_ago_plural: '__count__ miesiące temu',\n            month_in: 'za __count__ miesiąc',\n            month_in_plural: 'za __count__ miesiące',\n            year_ago: '__count__ rok temu',\n            year_ago_plural: '__count__ lata temu',\n            year_in: 'za __count__ rok',\n            year_in_plural: 'za __count__ lata'\n        }\n    },\n    pt: {\n        translation: {\n            now: 'agora',\n            second_ago: 'há __count__ segundo',\n            second_ago_plural: 'há __count__ segundos',\n            second_in: 'em __count__ segundo',\n            second_in_plural: 'em __count__ segundos',\n            minute_ago: 'há __count__ minuto',\n            minute_ago_plural: 'há __count__ minutos',\n            minute_in: 'em __count__ minuto',\n            minute_in_plural: 'em __count__ minutos',\n            hour_ago: 'há __count__ hora',\n            hour_ago_plural: 'há __count__ horas',\n            hour_in: 'em __count__ hora',\n            hour_in_plural: 'em __count__ horas',\n            day_ago: 'há __count__ dia',\n            day_ago_plural: 'há __count__ dias',\n            day_in: 'em __count__ dia',\n            day_in_plural: 'em __count__ dias',\n            month_ago: 'há __count__ mês',\n            month_ago_plural: 'há __count__ meses',\n            month_in: 'em __count__ mês',\n            month_in_plural: 'em __count__ meses',\n            year_ago: 'há __count__ ano',\n            year_ago_plural: 'há __count__ anos',\n            year_in: 'em __count__ ano',\n            year_in_plural: 'em __count__ anos'\n        }\n    },\n    sv: {\n        translation: {\n            now: 'nu',\n            second_ago: 'för __count__ sekund sedan',\n            second_ago_plural: 'för __count__ sekunder sedan',\n            second_in: 'om __count__ sekund',\n            second_in_plural: 'om __count__ sekunder',\n            minute_ago: 'för __count__ minut sedan',\n            minute_ago_plural: 'för __count__ minuter sedan',\n            minute_in: 'om __count__ minut',\n            minute_in_plural: 'om __count__ minuter',\n            hour_ago: 'för __count__ timme sedan',\n            hour_ago_plural: 'för __count__ timmar sedan',\n            hour_in: 'om __count__ timme',\n            hour_in_plural: 'om __count__ timmar',\n            day_ago: 'för __count__ dag sedan',\n            day_ago_plural: 'för __count__ dagar sedan',\n            day_in: 'om __count__ dag',\n            day_in_plural: 'om __count__ dagar',\n            month_ago: 'för __count__ månad sedan',\n            month_ago_plural: 'för __count__ månader sedan',\n            month_in: 'om __count__ månad',\n            month_in_plural: 'om __count__ månader',\n            year_ago: 'för __count__ år sedan',\n            year_ago_plural: 'för __count__ år sedan',\n            year_in: 'om __count__ år',\n            year_in_plural: 'om __count__ år'\n        }\n    },\n    th: {\n        translation: {\n            now: 'ขณะนี้',\n            second_ago: '__count__ วินาทีที่ผ่านมา',\n            second_ago_plural: '__count__ วินาทีที่ผ่านมา',\n            second_in: 'ในอีก __count__ วินาที',\n            second_in_plural: 'ในอีก __count__ วินาที',\n            minute_ago: '__count__ นาทีที่ผ่านมา',\n            minute_ago_plural: '__count__ นาทีที่ผ่านมา',\n            minute_in: 'ในอีก __count__ นาที',\n            minute_in_plural: 'ในอีก __count__ นาที',\n            hour_ago: '__count__ ชั่วโมงที่ผ่านมา',\n            hour_ago_plural: '__count__ ชั่วโมงที่ผ่านมา',\n            hour_in: 'ในอีก __count__ ชั่วโมง',\n            hour_in_plural: 'ในอีก __count__ ชั่วโมง',\n            day_ago: '__count__ วันที่ผ่านมา',\n            day_ago_plural: '__count__ วันที่ผ่านมา',\n            day_in: 'ในอีก __count__ วัน',\n            day_in_plural: 'ในอีก __count__ วัน',\n            month_ago: '__count__ เดือนที่ผ่านมา',\n            month_ago_plural: '__count__ เดือนที่ผ่านมา',\n            month_in: 'ในอีก __count__ เดือน',\n            month_in_plural: 'ในอีก __count__ เดือน',\n            year_ago: '__count__ ปีที่แล้ว',\n            year_ago_plural: '__count__ ปีที่แล้ว',\n            year_in: 'ในอีก __count__ ปี',\n            year_in_plural: 'ในอีก __count__ ปี'\n        }\n    },\n    zh: {\n        translation: {\n            now: '现在',\n            second_ago: '__count__秒钟前',\n            second_ago_plural: '__count__秒钟前',\n            second_in: '__count__秒钟后',\n            second_in_plural: '__count__秒钟后',\n            minute_ago: '__count__分钟前',\n            minute_ago_plural: '__count__分钟前',\n            minute_in: '__count__分钟后',\n            minute_in_plural: '__count__分钟后',\n            hour_ago: '__count__小时前',\n            hour_ago_plural: '__count__小时前',\n            hour_in: '__count__小时后',\n            hour_in_plural: '__count__小时后',\n            day_ago: '__count__天前',\n            day_ago_plural: '__count__天前',\n            day_in: '__count__天后',\n            day_in_plural: '__count__天后',\n            month_ago: '__count__个月前',\n            month_ago_plural: '__count__个月前',\n            month_in: '__count__个月后',\n            month_in_plural: '__count__个月后',\n            year_ago: '__count__年前',\n            year_ago_plural: '__count__年前',\n            year_in: '__count__年后',\n            year_in_plural: '__count__年后'\n        }\n    },\n    'zh-HK': {\n        translation: {\n            now: '現在',\n            second_ago: '__count__ 秒前',\n            second_ago_plural: '__count__ 秒前',\n            second_in: '__count__ 秒後',\n            second_in_plural: '__count__ 秒後',\n            minute_ago: '__count__ 分鐘前',\n            minute_ago_plural: '__count__ 分鐘前',\n            minute_in: '__count__ 分鐘後',\n            minute_in_plural: '__count__ 分鐘後',\n            hour_ago: '__count__ 小時前',\n            hour_ago_plural: '__count__ 小時前',\n            hour_in: '__count__ 小時後',\n            hour_in_plural: '__count__ 小時後',\n            day_ago: '__count__ 日前',\n            day_ago_plural: '__count__ 日前',\n            day_in: '__count__ 日後',\n            day_in_plural: '__count__ 日後',\n            month_ago: '__count__ 個月前',\n            month_ago_plural: '__count__ 個月前',\n            month_in: '__count__ 個月後',\n            month_in_plural: '__count__ 個月後',\n            year_ago: '__count__ 年前',\n            year_ago_plural: '__count__ 年前',\n            year_in: '__count__ 年後',\n            year_in_plural: '__count__ 年後'\n        },\n    },\n    'zh-TW': {\n        translation: {\n            now: '剛才',\n            second_ago: '__count__ 秒鐘前',\n            second_ago_plural: '__count__ 秒鐘前',\n            second_in: '__count__ 秒內',\n            second_in_plural: '__count__ 秒內',\n            minute_ago: '__count__ 分鐘前',\n            minute_ago_plural: '__count__ 分鐘前',\n            minute_in: '__count__ 分鐘內',\n            minute_in_plural: '__count__ 分鐘內',\n            hour_ago: '__count__ 小時前',\n            hour_ago_plural: '__count__ 小時前',\n            hour_in: '__count__ 小時內',\n            hour_in_plural: '__count__ 小時內',\n            day_ago: '__count__ 天前',\n            day_ago_plural: '__count__ 天前',\n            day_in: '__count__ 天內',\n            day_in_plural: '__count__ 天內',\n            month_ago: '__count__ 月前',\n            month_ago_plural: '__count__ 月前',\n            month_in: '__count__ 月內',\n            month_in_plural: '__count__ 月內',\n            year_ago: '__count__ 年前',\n            year_ago_plural: '__count__ 年前',\n            year_in: '__count__ 年內',\n            year_in_plural: '__count__ 年內'\n        }\n    }\n};\n// tslint:enable\n\nclass RelativeTime {\n    constructor(service, ea) {\n        this.service = service;\n        this.ea = ea;\n        this.service.i18nextReady().then(() => {\n            this.setup();\n        });\n        this.ea.subscribe(I18N_EA_SIGNAL, (locales) => {\n            this.setup(locales);\n        });\n    }\n    static inject() { return [I18N, aurelia_event_aggregator__WEBPACK_IMPORTED_MODULE_8__[\"EventAggregator\"]]; }\n    setup(locales) {\n        const trans = translations;\n        const fallbackLng = this.service.i18next.fallbackLng;\n        let alternateFb = fallbackLng || this.service.i18next.options.fallbackLng;\n        if (Array.isArray(alternateFb) && alternateFb.length > 0) {\n            alternateFb = alternateFb[0];\n        }\n        const key = ((locales && locales.newValue)\n            ? locales.newValue\n            : this.service.getLocale()) || alternateFb;\n        let index = 0;\n        // tslint:disable-next-line:no-conditional-assignment\n        if ((index = key.indexOf(\"-\")) >= 0) {\n            const baseLocale = key.substring(0, index);\n            if (trans[baseLocale]) {\n                this.addTranslationResource(baseLocale, trans[baseLocale].translation);\n            }\n        }\n        if (trans[key]) {\n            this.addTranslationResource(key, trans[key].translation);\n        }\n        if (trans[fallbackLng]) {\n            this.addTranslationResource(key, trans[fallbackLng].translation);\n        }\n    }\n    addTranslationResource(key, translation) {\n        const options = this.service.i18next.options;\n        if (options.interpolation && (options.interpolation.prefix !== \"__\" || options.interpolation.suffix !== \"__\")) {\n            // tslint:disable-next-line:forin\n            for (const subkey in translation) {\n                translation[subkey] = translation[subkey]\n                    .replace(\"__count__\", `${options.interpolation.prefix || \"{{\"}count${options.interpolation.suffix || \"}}\"}`);\n            }\n        }\n        this.service.i18next.addResources(key, options.defaultNS || \"translation\", translation);\n    }\n    getRelativeTime(time) {\n        const now = new Date();\n        const diff = now.getTime() - time.getTime();\n        let timeDiff = this.getTimeDiffDescription(diff, \"year\", 31104000000);\n        if (!timeDiff) {\n            timeDiff = this.getTimeDiffDescription(diff, \"month\", 2592000000);\n            if (!timeDiff) {\n                timeDiff = this.getTimeDiffDescription(diff, \"day\", 86400000);\n                if (!timeDiff) {\n                    timeDiff = this.getTimeDiffDescription(diff, \"hour\", 3600000);\n                    if (!timeDiff) {\n                        timeDiff = this.getTimeDiffDescription(diff, \"minute\", 60000);\n                        if (!timeDiff) {\n                            timeDiff = this.getTimeDiffDescription(diff, \"second\", 1000);\n                            if (!timeDiff) {\n                                timeDiff = this.service.tr(\"now\");\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return timeDiff;\n    }\n    getTimeDiffDescription(diff, unit, timeDivisor) {\n        const unitAmount = parseInt((diff / timeDivisor).toFixed(0), 10);\n        if (unitAmount > 0) {\n            return this.service.tr(unit, { count: unitAmount, context: \"ago\" });\n        }\n        else if (unitAmount < 0) {\n            const abs = Math.abs(unitAmount);\n            return this.service.tr(unit, { count: abs, context: \"in\" });\n        }\n        return null;\n    }\n}\n\nlet RtValueConverter = class RtValueConverter {\n    constructor(service) {\n        this.service = service;\n    }\n    static inject() { return [RelativeTime]; }\n    toView(value) {\n        if (value === null\n            || typeof value === \"undefined\"\n            || (typeof value === \"string\" && value.trim() === \"\")) {\n            return value;\n        }\n        if (typeof value === \"string\" && isNaN(value) && !Number.isInteger(value)) {\n            value = new Date(value);\n        }\n        return this.service.getRelativeTime(value);\n    }\n};\nRtValueConverter = __decorate([\n    Object(aurelia_binding__WEBPACK_IMPORTED_MODULE_9__[\"valueConverter\"])(\"rt\")\n], RtValueConverter);\n\nclass Backend {\n    constructor(services, options = {}) {\n        this.services = services;\n        this.options = options;\n        this.type = \"backend\";\n        this.init(services, options);\n    }\n    static with(loader) {\n        this.loader = loader;\n        return this;\n    }\n    init(services, options = {}) {\n        this.services = services;\n        this.options = Object.assign({}, {\n            loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n            addPath: \"locales/add/{{lng}}/{{ns}}\",\n            allowMultiLoading: false,\n            parse: JSON.parse\n        }, options);\n    }\n    readMulti(languages, namespaces, callback) {\n        let loadPath = this.options.loadPath;\n        if (typeof this.options.loadPath === \"function\") {\n            loadPath = this.options.loadPath(languages, namespaces);\n        }\n        const url = this.services\n            .interpolator\n            .interpolate(loadPath, { lng: languages.join(\"+\"), ns: namespaces.join(\"+\") });\n        this.loadUrl(url, callback);\n    }\n    read(language, namespace, callback) {\n        let loadPath = this.options.loadPath;\n        if (typeof this.options.loadPath === \"function\") {\n            loadPath = this.options.loadPath([language], [namespace]);\n        }\n        const url = this.services.interpolator.interpolate(loadPath, { lng: language, ns: namespace });\n        this.loadUrl(url, callback);\n    }\n    loadUrl(url, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield Backend.loader.loadText(url);\n                let ret;\n                let err;\n                try {\n                    ret = (response instanceof Object) ? response : this.options.parse(response, url);\n                }\n                catch (e) {\n                    err = \"failed parsing \" + url + \" to json\";\n                }\n                if (err) {\n                    return callback(err, false);\n                }\n                callback(null, ret);\n            }\n            catch (_a) {\n                callback(\"failed loading \" + url, false /* no retry */);\n            }\n        });\n    }\n    // tslint:disable-next-line:variable-name\n    create(_languages, _namespace, _key, _fallbackValue) {\n        // not supported\n    }\n}\nBackend.type = \"backend\";\n\nfunction configure(frameworkConfig, cb) {\n    if (typeof cb !== \"function\") {\n        const errorMsg = \"You need to provide a callback method to properly configure the library\";\n        throw errorMsg;\n    }\n    const instance = frameworkConfig.container.get(I18N);\n    const ret = cb(instance);\n    frameworkConfig.globalResources([\n        TValueConverter,\n        TBindingBehavior,\n        TCustomAttribute,\n        TParamsCustomAttribute,\n        NfValueConverter,\n        NfBindingBehavior,\n        DfValueConverter,\n        DfBindingBehavior,\n        RtValueConverter,\n        RtBindingBehavior\n    ]);\n    frameworkConfig.postTask(() => {\n        const resources = frameworkConfig.container.get(aurelia_templating__WEBPACK_IMPORTED_MODULE_3__[\"ViewResources\"]);\n        const htmlBehaviorResource = resources.getAttribute(\"t\");\n        const htmlParamsResource = resources.getAttribute(\"t-params\");\n        let attributes = instance.i18next.options.attributes;\n        // Register default attributes if none provided\n        if (!attributes) {\n            attributes = [\"t\", \"i18n\"];\n        }\n        attributes.forEach((alias) => resources.registerAttribute(alias, htmlBehaviorResource, \"t\"));\n        attributes.forEach((alias) => resources.registerAttribute(alias + \"-params\", htmlParamsResource, \"t-params\"));\n    });\n    return ret;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///fd9Y\n");

/***/ })

}]);