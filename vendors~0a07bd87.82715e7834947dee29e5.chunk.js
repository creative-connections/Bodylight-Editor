(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~0a07bd87"],{

/***/ "aurelia-bodylight-plugin/elements/chartjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.Chartjs = void 0;\n\nvar _chart = _interopRequireDefault(__webpack_require__(/*! chart.js */ \"MO+k\"));\n\nvar _chartjsPluginDatalabels = _interopRequireDefault(__webpack_require__(/*! chartjs-plugin-datalabels */ \"qb46\"));\n\nvar _aureliaFramework = __webpack_require__(/*! aurelia-framework */ \"aurelia-framework\");\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nvar Chartjs = (_class = /*#__PURE__*/function () {\n  //id to listen addsection event\n  //false - to keep width and height, true - to rescale\n  //may be configured by subclasses\n\n  /**\n   * initializes handlers for event processing - this is recommended way\n   */\n  function Chartjs() {\n    var _this = this;\n\n    _initializerDefineProperty(this, \"fromid\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"labels\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"refindex\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"refvalues\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"type\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"maxdata\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"initialdata\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"width\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"height\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"animate\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"id\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"ylabel\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"xlabel\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"convertors\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"verticalline\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"generatelabels\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"sectionid\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"responsive\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"canvasobj\", _descriptor19, this);\n\n    this.indexsection = 0;\n    this.datalabels = false;\n\n    this.handleValueChange = function (e) {\n      //sets data to dataset\n      //apply value convert among all data\n      var rawdata = e.detail.data.slice(_this.refindex, _this.refendindex); //if convert operation is defined as array\n\n      if (_this.operation) {\n        for (var i = 0; i < rawdata.length; i++) {\n          //if particular operation is defined\n          if (_this.operation[i]) rawdata[i] = _this.operation[i](rawdata[i]);\n        }\n      }\n\n      _this.chart.data.datasets[0].data = rawdata;\n\n      _this.chart.update();\n    };\n\n    this.handleReset = function (e) {\n      //console.log('handlereset');\n      _this.resetdata();\n\n      _this.chart.update();\n    };\n\n    this.handleAddSection = function (e) {\n      _this.addSection(e.detail.label);\n    };\n  }\n  /**\n   * empties data in every dataset and empties section\n   */\n\n\n  var _proto = Chartjs.prototype;\n\n  _proto.resetdata = function resetdata() {\n    //fix TypeError: o is undefined\n    for (var _iterator = _createForOfIteratorHelperLoose(this.chart.data.dataset), _step; !(_step = _iterator()).done;) {\n      var dataset = _step.value;\n      if (dataset && dataset.data) dataset.data = [];\n    }\n\n    if (this.sectionid) this.chart.config.options.section = [];\n  }\n  /**\n   * Returns unique color per index- neighbouring colors are different using golden angle approximation\n   * @param index\n   * @returns {string} usable by CSS or DOM elements\n   */\n  //  const hue = (i - 1) * 137.508; // use golden angle approximation\n  //  var color = `hsl(${hue},85%,91%)`;\n  ;\n\n  _proto.selectColor = function selectColor(index, saturation, lightness) {\n    if (saturation === void 0) {\n      saturation = 55;\n    }\n\n    if (lightness === void 0) {\n      lightness = 55;\n    }\n\n    var hue = (index - 1) * 137.508; // use golden angle approximation\n\n    return \"hsl(\" + hue + \",\" + saturation + \"%,\" + lightness + \"%)\";\n  }\n  /**\n   * process all attributes of <bdl-chart> component and sets appropriate settings of subesquent chartjs\n   */\n  ;\n\n  _proto.bind = function bind() {\n    var _this2 = this;\n\n    //console.log('chartjs bind');\n    this.refindex = parseInt(this.refindex, 10);\n    this.refvalues = parseInt(this.refvalues, 10);\n    this.refendindex = this.refindex + this.refvalues; //empty plugins by default\n\n    this.plugins = []; //configure convertors - used to convert units received from fmi\n\n    if (this.convertors) {\n      var convertvalues = this.convertors.split(';');\n\n      var identity = function identity(x) {\n        return x;\n      };\n\n      this.operation = [];\n\n      for (var i = 0; i < convertvalues.length; i++) {\n        if (convertvalues[i].includes(',')) {\n          //convert values are in form numerator,denominator contains comma ','\n          var convertitems = convertvalues[i].split(',');\n          if (convertitems[0] === '1' && convertitems[1] === '1') this.operation.push(identity);else {\n            (function () {\n              var numerator = parseFloat(convertitems[0]);\n              var denominator = parseFloat(convertitems[1]);\n\n              _this2.operation.push(function (x) {\n                return x * numerator / denominator;\n              });\n            })();\n          }\n        } else {\n          //convert values are in form of expression, do not contain comma\n          if (convertvalues === '1/x') this.operation.push(function (x) {\n            return 1 / x;\n          });else {\n            (function () {\n              // for eval() security filter only allowed characters:\n              // algebraic, digits, e, dot, modulo, parenthesis and 'x' and 'e' is allowed\n              var expression = convertvalues[i].replace(/[^-\\d/*+.()%xe]/g, '');\n              console.log('chartjs bind(), evaluating expression:' + convertvalues[i] + ' securely filtered to :' + expression); // eslint-disable-next-line no-eval\n\n              _this2.operation.push(function (x) {\n                return eval(expression);\n              });\n            })();\n          }\n        }\n      }\n    } //sets boolean value - if verticalline attribute is set\n\n\n    if (typeof this.generatelabels === 'string') {\n      this.generatelabels = this.generatelabels === 'true';\n    } //sets color of each dataset as different as possible\n    //and set initial data in chart\n    //set labels - separated by comma\n\n\n    if (this.labels) this.chlabels = this.labels.split(','); //else generate labels as 'variable 1' ...\n    else {\n        //this.chlabels = [...Array(this.refvalues)].map((_, i) => this.generatelabels ? `variable ${i}` : '');\n        //this seems not to be correctly transpilled to ES5, therefore following generator ->\n        this.chlabels = [];\n\n        for (var _i = 0; _i < this.refvalues; _i++) {\n          var ilabel = this.generatelabels ? 'variable ' + _i : '';\n          this.chlabels.push(ilabel);\n        }\n      }\n    this.colors = [];\n    var mydatastr = this.initialdata.split(',');\n    this.mydata = mydatastr.map(function (x) {\n      return parseFloat(x);\n    });\n\n    for (var _i2 = 0; _i2 < this.refvalues; _i2++) {\n      if (!this.mydata[_i2]) {//this.mydata.push(0);\n        //console.log('chartjs no data');\n      }\n\n      this.colors.push(this.selectColor(_i2));\n    }\n\n    var datasets = [{\n      data: this.mydata,\n      backgroundColor: this.colors\n    }];\n    this.data = {\n      labels: this.chlabels,\n      datasets: datasets\n    }; //bind - string value to boolean\n\n    if (typeof this.animate === 'string') {\n      this.animate = this.animate === 'true';\n    }\n\n    if (typeof this.responsive === 'string') {\n      this.responsive = this.responsive === 'true';\n    } //set animation options\n\n\n    var animopts1 = {\n      animateScale: true,\n      animateRotate: true,\n      duration: 500\n    };\n    var animopts2 = {\n      duration: 0\n    }; //select options based on attribute value - whether to animate or not\n\n    var animopts = this.animate ? animopts1 : animopts2; //set labels for axes in chartjs opts\n\n    var axisopts = {};\n\n    if (this.ylabel) {\n      axisopts.yAxes = [{\n        scaleLabel: {\n          display: true,\n          labelString: this.ylabel\n        }\n      }];\n    }\n\n    if (this.xlabel) {\n      axisopts.xAxes = [{\n        scaleLabel: {\n          display: true,\n          labelString: this.xlabel\n        }\n      }];\n    } //initialize options - used later by chartjs instance\n\n\n    this.options = {\n      live: true,\n      responsive: this.responsive,\n      //true - rescale, false - will keep canvas width and height\n      legend: {\n        //display: false,\n        position: 'top'\n      },\n      animation: animopts,\n      tooltips: {\n        position: 'nearest',\n        mode: 'index',\n        intersect: false,\n        titleFontFamily: 'Open Sans',\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        //titleFontColor: 'red',\n        caretSize: 5,\n        cornerRadius: 4,\n        xPadding: 3,\n        yPadding: 3\n      },\n      hover: {\n        animationDuration: 0 //disable animation on hover - e.g. for tooltips\n\n      },\n      scales: axisopts\n    }; //sets boolean value - if verticalline attribute is set\n\n    if (typeof this.verticalline === 'string') {\n      this.verticalline = this.verticalline === 'true';\n    }\n\n    if (typeof this.maxdata === 'string') {\n      this.maxdata = parseInt(this.maxdata, 10);\n    } //if sections are requested - define chartjs plugin to draw it in background\n\n\n    if (this.sectionid) {\n      this.options.section = [];\n    }\n\n    this.tooltips = ['mousemove', 'touchstart', 'touchmove', 'click'];\n  }\n  /**\n   * this is called when the DOM is attached to view - instantiate the chartjs and sets all necesary binding\n   */\n  ;\n\n  _proto.attached = function attached() {\n    //console.log('chartjs attached');\n    //listening to custom event fmidata and fmireset\n    var fromel = document.getElementById(this.fromid);\n\n    if (fromel) {\n      fromel.addEventListener('fmidata', this.handleValueChange);\n      fromel.addEventListener('fmireset', this.handleReset);\n    } else {\n      console.log('chartjs WARNING, null fromid element');\n    }\n\n    if (this.sectionid) {\n      var sectionel = document.getElementById(this.sectionid);\n      if (sectionel) sectionel.addEventListener('addsection', this.handleAddSection);else console.log('chartjs WARNING, null sectionid element');\n    } //unregister\n\n\n    _chart.default.plugins.unregister(_chartjsPluginDatalabels.default); //for verticalline option - register controller for BdlChartjs\n\n\n    if (this.verticalline) {\n      _chart.default.defaults.LineWithLine = _chart.default.defaults.line;\n      _chart.default.controllers.LineWithLine = _chart.default.controllers.line.extend({\n        draw: function draw(ease) {\n          _chart.default.controllers.line.prototype.draw.call(this, ease);\n\n          if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n            var activePoint = this.chart.tooltip._active[0];\n            var _ctx = this.chart.ctx;\n            var x = activePoint.tooltipPosition().x;\n            var topY = this.chart.legend.bottom;\n            var bottomY = this.chart.chartArea.bottom; // draw line\n\n            _ctx.save();\n\n            _ctx.beginPath();\n\n            _ctx.moveTo(x, topY);\n\n            _ctx.lineTo(x, bottomY);\n\n            _ctx.lineWidth = 1;\n            _ctx.strokeStyle = '#555';\n\n            _ctx.stroke();\n\n            _ctx.restore();\n          }\n        }\n      });\n    } //for sections register chartjs plugin\n\n\n    if (this.sectionid) {\n      _chart.default.pluginService.register({\n        beforeDraw: function beforeDraw(chart, easing) {\n          if (chart.config.options.section && chart.config.options.section.length > 0) {\n            var _ctx2 = chart.chart.ctx;\n            var chartArea = chart.chartArea;\n            var meta = chart.getDatasetMeta(0);\n            var i;\n\n            _ctx2.save(); //console.log('chartjs sections', chart.config.options.section);\n\n\n            for (i = 1; i < chart.config.options.section.length; i++) {\n              //console.log('chartjs sectionplugin:i, section[i-1], section[1],start,stop)', i, chart.config.options.section[i - 1],chart.config.options.section[i]);\n              var start = meta.data[chart.config.options.section[i - 1].index]._model.x;\n              var stop = meta.data[chart.config.options.section[i].index]._model.x;\n              /*const hue = (i - 1) * 137.508; // use golden angle approximation\n              ctx.fillStyle = `hsl(${hue},85%,91%)`;\n               */\n              //bar\n\n              _ctx2.fillStyle = chart.config.options.section[i - 1].color;\n\n              _ctx2.fillRect(start, chartArea.top, stop - start, chartArea.bottom - chartArea.top); //label\n              //ctx.translate(start, chartArea.top);\n              //ctx.rotate(Math.PI / 2);\n\n\n              _ctx2.save();\n\n              _ctx2.translate(start, chartArea.top);\n\n              _ctx2.rotate(90 * Math.PI / 180);\n\n              _ctx2.fillStyle = '#aaa';\n              _ctx2.font = '12px Helvetica';\n\n              _ctx2.fillText(chart.config.options.section[i - 1].label, 5, -5); //start, chartArea.top);\n\n\n              _ctx2.restore();\n            }\n\n            _ctx2.restore(); //console.log('last i',i);\n            //last section\n\n\n            i = chart.config.options.section.length;\n\n            if (i > 0 && chart.config.options.section[i - 1].index < meta.data.length - 1) {\n              //draw last section\n              var _start = meta.data[chart.config.options.section[i - 1].index]._model.x;\n              var _stop = meta.data[meta.data.length - 1]._model.x; //console.log (start,stop);\n\n              /*\n              const hue = (i - 1) * 137.508; // use golden angle approximation\n              var color = `hsl(${hue},85%,91%)`;\n               */\n\n              _ctx2.fillStyle = chart.config.options.section[i - 1].color; //console.log (chartArea);\n\n              _ctx2.fillRect(_start, chartArea.top, _stop - _start, chartArea.bottom - chartArea.top);\n\n              _ctx2.save();\n\n              _ctx2.translate(_start, chartArea.top);\n\n              _ctx2.rotate(90 * Math.PI / 180);\n\n              _ctx2.fillStyle = '#aaa';\n              _ctx2.font = '12px Helvetica';\n\n              _ctx2.fillText(chart.config.options.section[i - 1].label, 5, -5); //start, chartArea.top);\n\n\n              _ctx2.restore();\n            }\n          }\n        }\n      });\n    }\n\n    if (this.datalabels) {\n      console.log('datalabels true ,setting plugin', this.datalabels);\n\n      _chart.default.pluginService.register({\n        afterDatasetsDraw: function afterDatasetsDraw(chartInstance, easing) {\n          // To only draw at the end of animation, check for easing === 1\n          //if (dataset && dataset.datalabels) {\n          var ctx = chartInstance.chart.ctx;\n          chartInstance.data.datasets.forEach(function (dataset, i) {\n            if (dataset && dataset.datalabels) {\n              var meta = chartInstance.getDatasetMeta(i);\n\n              if (!meta.hidden) {\n                meta.data.forEach(function (element, index) {\n                  if (dataset.datalabels[index].length > 0) {\n                    // Draw the text in black, with the specified font\n                    ctx.fillStyle = '#aaa';\n                    ctx.font = '12px Helvetica'; // Just naively convert to string for now\n\n                    var dataString = dataset.datalabels[index]; // Make sure alignment settings are correct\n\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    var padding = 5;\n                    var position = element.tooltipPosition();\n                    ctx.fillText(dataString, position.x, position.y - 12 / 2 - padding);\n                  }\n                });\n              }\n            }\n          });\n        }\n      });\n    } //canvasobj - if defined then use this object name to get canvas object -  otherwise the one from template\n\n\n    var ctx = this.canvasobj ? window[this.canvasobj] : this.chartcanvas.getContext('2d'); //ctx may be null if canvasobj is not yet initialized.\n\n    if (ctx) this.initChart(ctx); //init chart only if ctx is ready\n    else window.lazyInitChart = this;\n  };\n\n  _proto.initChart = function initChart(ctx) {\n    var that = this;\n\n    if (window.lazyInitChart) {\n      var _that = window.lazyInitChart;\n    }\n\n    that.chart = new _chart.default(ctx, {\n      plugins: that.plugins,\n      type: that.type,\n      data: that.data,\n      options: that.options,\n      tooltipEvents: that.tooltips\n    }); // console.log('chartjs data', this.data);\n  }\n  /**\n   * called when component is detached from view - remove event listeners - no need to update chart\n   */\n  ;\n\n  _proto.detached = function detached() {\n    if (document.getElementById(this.fromid)) {\n      document.getElementById(this.fromid).removeEventListener('fmidata', this.handleValueChange);\n      document.getElementById(this.fromid).removeEventListener('fmireset', this.handleReset);\n\n      if (this.sectionid) {\n        document.getElementById(this.sectionid).removeEventListener('addsection', this.handleAddSection);\n      }\n    }\n  }\n  /**\n   * asks for filename and creates blob with CSV data from chart which initiates web browser download dialog.\n   * CSV -  time point per row\n   */\n  ;\n\n  _proto.download = function download() {\n    //ask for filename\n    var filename = prompt('File name (*.csv):', 'data.csv');\n\n    if (filename) {\n      //adds csv as extension\n      if (!filename.endsWith('.csv')) filename = filename.concat('.csv'); //labels first row\n\n      var content = 'Time,' + this.labels + '\\n'; //transpose each row = variable in specific time\n\n      for (var i = 0; i < this.chart.data.labels.length; i++) {\n        var row = this.chart.data.labels[i];\n\n        for (var j = 0; j < this.chart.data.datasets.length; j++) {\n          row += ',' + this.chart.data.datasets[j].data[i];\n        }\n\n        content += row + '\\n';\n      }\n\n      var blob = new Blob([content], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      saveAs(blob, filename);\n    }\n  }\n  /**\n   * asks for filename and creates blob with CSV data from chart which initiates web browser download dialog\n   * CSV - variable values per row\n   */\n  ;\n\n  _proto.downloadflat = function downloadflat() {\n    //ask for filename\n    var filename = prompt('File name (*.csv):', 'data.csv');\n\n    if (filename) {\n      //adds csv as extension\n      if (!filename.endsWith('.csv')) filename = filename.concat('.csv'); //labels first row - each row is then all data per variable - transposition might be needed\n\n      var content = 'variable name,values ...' + '\\n';\n      var labels = this.labels.split(','); // variable per row\n      //chart labels - usually time\n\n      content = content + 'Time,' + this.chart.data.labels.join(',') + '\\n'; //dataset data on other rows\n\n      for (var i = 0; i < this.chart.data.datasets.length; i++) {\n        content = content + labels[i] + ',' + this.chart.data.datasets[i].data.join(',') + '\\n';\n      }\n\n      var blob = new Blob([content], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      saveAs(blob, filename);\n    }\n  }\n  /**\n   * Adds new section in chartarea - current last data in dataset\n   */\n  ;\n\n  _proto.addSection = function addSection(label) {\n    if (label === void 0) {\n      label = '';\n    }\n\n    this.indexsection++;\n    if (!label) label = '';\n    console.log('chartjs.addsection()', this.chart.data.labels.length - 1);\n    this.chart.config.options.section.push({\n      index: this.chart.data.labels.length - 1,\n      color: this.selectColor(this.indexsection, 85, 91),\n      label: label\n    });\n  };\n\n  return Chartjs;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"fromid\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"labels\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"refindex\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"refvalues\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"type\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'doughnut';\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"maxdata\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 256;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"initialdata\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"width\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 300;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"height\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 200;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"animate\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"id\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"ylabel\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"xlabel\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"convertors\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"verticalline\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"generatelabels\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"sectionid\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"responsive\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"canvasobj\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\nexports.Chartjs = Chartjs;\n//# sourceMappingURL=chartjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-barplot":
/*!***********************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-barplot.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.ChartjsBarplot = void 0;\n\nvar _chartjs = __webpack_require__(/*! ./chartjs */ \"aurelia-bodylight-plugin/elements/chartjs\");\n\nvar _chartjsPluginDatalabels = _interopRequireDefault(__webpack_require__(/*! chartjs-plugin-datalabels */ \"qb46\"));\n\nvar _aureliaTemplating = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n//import {PLATFORM} from 'aurelia-pal';\n//@useView(PLATFORM.moduleName('./bdl-chartjs.html'))\n//@useView('./chartjs.html')\nvar ChartjsBarplot = (_class = /*#__PURE__*/function (_Chartjs) {\n  _inheritsLoose(ChartjsBarplot, _Chartjs);\n\n  //csv limits of chart min and max\n  //='';//0.25,0.75'; //csv normal limits inside chart\n  //sets precision to floor/round\n  //whether click will create event 'change'\n  function ChartjsBarplot() {\n    var _this;\n\n    _this = _Chartjs.call(this) || this;\n\n    _initializerDefineProperty(_this, \"id\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"fromid\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"labels\", _descriptor3, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refindex\", _descriptor4, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refvalues\", _descriptor5, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"extremelimits\", _descriptor6, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"normallimits\", _descriptor7, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"initialdata\", _descriptor8, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"width\", _descriptor9, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"height\", _descriptor10, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"nominal\", _descriptor11, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"twoway\", _descriptor12, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"responsive\", _descriptor13, _assertThisInitialized(_this));\n\n    _this.handleValueChange = function (e) {\n      //sets data to dataset\n      //apply value convert among all data\n      var rawdata = e.detail.data.slice(_this.refindex, _this.refendindex); //if convert operation is defined as array\n\n      if (_this.operation) {\n        for (var i = 0; i < rawdata.length; i++) {\n          //if particular operation is defined\n          if (_this.operation[i]) rawdata[i] = _this.operation[i](rawdata[i]);\n        }\n      }\n\n      _this.chart.data.datasets[0].data = rawdata; //now decide whether datalabel is right or left\n\n      if ((_this.elimits[1] - rawdata) / (_this.elimits[1] - _this.elimits[0]) < 0.05) {\n        _this.options.plugins.datalabels.align = 'left';\n        _this.options.plugins.datalabels.color = 'white';\n      } else {\n        _this.options.plugins.datalabels.align = 'right';\n        _this.options.plugins.datalabels.color = 'black';\n      }\n\n      _this.chart.update();\n    };\n\n    return _this;\n  }\n\n  var _proto = ChartjsBarplot.prototype;\n\n  _proto.bind = function bind() {\n    _Chartjs.prototype.bind.call(this);\n\n    this.plugins = [_chartjsPluginDatalabels.default];\n\n    if (this.extremelimits) {\n      this.elimits = this.extremelimits.split(','); //split by comma\n\n      for (var i = 0; i < this.elimits.length; i++) {\n        this.elimits[i] = parseFloat(this.elimits[i]);\n      }\n    }\n\n    if (this.normallimits) {\n      this.nlimits = this.normallimits.split(',');\n\n      for (var _i = 0; _i < this.nlimits.length; _i++) {\n        this.nlimits[_i] = parseFloat(this.nlimits[_i]);\n      }\n    }\n\n    if (this.nominal) {\n      if (typeof this.nominal === 'string') this.nominal = parseFloat(this.nominal);\n      this.options.nominal = this.nominal;\n    }\n\n    if (this.twoway && typeof this.twoway === 'string') {\n      this.twoway = this.twoway === 'true';\n    } //chartjs type horizontal bar\n\n\n    this.type = 'horizontalBar'; // no legend and no labels\n    //this.chlabels = [];\n\n    this.options.legend.display = false; //sets xaxis limits to extremelimits\n\n    if (!this.options.scales.xAxes) this.options.scales.xAxes = [{}];\n    this.options.scales.xAxes[0].ticks = {\n      autoSkip: true,\n      min: this.elimits[0],\n      max: this.elimits[1],\n      fontSize: 8,\n      callback: function callback(value, index, values) {\n        //count relative distance to last tick value\n        var reldistance = (values[3] - value) / (values[3] - values[0]); // do not display tick label if too close to extreme limit (<5% of length)\n\n        if (index === 2 && reldistance < 0.05) return '';\n        return value;\n      }\n    }; //set ticks to extreme and normal limits only\n\n    var myticks = this.normallimits ? [this.elimits[0], this.nlimits[0], this.nlimits[1], this.elimits[1]] : [this.elimits[0], this.elimits[1]]; //console.log('charjs barplot myticks', myticks);\n\n    this.options.scales.xAxes[0].afterBuildTicks = function (scale) {\n      scale.ticks = myticks;\n      return;\n    };\n\n    this.options.scales.xAxes[0].beforeUpdate = function (oScale) {\n      return;\n    }; //datalabel plugin shows value right of the bar\n\n\n    this.options.plugins = {\n      datalabels: {\n        align: 'right',\n        anchor: 'end',\n        formatter: function formatter(value, context) {\n          return value.toPrecision(3);\n        },\n        font: {\n          size: 8\n        },\n        padding: {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 1\n        }\n      }\n    }; //now decide whether datalabel is right or left\n    //TODO eliminate duplicate in handlevaluechange\n\n    if ((this.elimits[1] - parseFloat(this.initialdata)) / (this.elimits[1] - this.elimits[0]) < 0.05) {\n      this.options.plugins.datalabels.align = 'left';\n      this.options.plugins.datalabels.color = 'white';\n    } else {\n      this.options.plugins.datalabels.align = 'right';\n      this.options.plugins.datalabels.color = 'black';\n    } //if the component is twoway - on click shows second bar with desired value and triggers 'change' event\n\n\n    if (this.twoway) {\n      //sets options for chart\n      this.options.events = ['click'];\n      this.options.parentId = this.id; //this.options.parentvm = this;\n\n      this.options.onClick = function (c, i) {\n        //note this - refers now to chart, not to webcomponent - shared properties are via options.nominal and options.parentid\n        //console.log('chartjs barplot click,', c, i, 'this:', this);\n        //let scaler = this.chart.scales['y-axis-0'];\n        var xscaler = this.chart.scales['x-axis-0']; //let y = c.clientY - this.canvas.getBoundingClientRect().top - scaler.top;\n\n        var x = c.clientX - this.canvas.getBoundingClientRect().left - xscaler.left; //let yval = scaler.max - y / scaler.height * (scaler.max - scaler.min);\n\n        var xval = xscaler.min + x / xscaler.width * (xscaler.max - xscaler.min);\n\n        if (this.options.nominal) {\n          //nominal is defined - floor xval to nominal\n          xval = Math.floor(xval / this.options.nominal) * this.options.nominal;\n        } //console.log('value clicked: %o, ypx: %o', yval, y);\n        //console.log('value clicked: %o, xpx: %o', xval, x);\n        //this.trigger('onTickerXClick', xval);\n\n\n        if (this.data.datasets.length < 2) {\n          this.data.datasets.push({\n            data: [xval],\n            backgroundColor: '#ff0000',\n            label: 'new value'\n          });\n        } else this.data.datasets[1].data = [xval];\n\n        this.update(); //create and dispatch change event\n\n        var event = new CustomEvent('change', {\n          detail: {\n            value: xval,\n            id: this.options.parentId\n          }\n        }); //dispatch event - it should be listened by some other component\n\n        document.getElementById(this.options.parentId).dispatchEvent(event); //this.parentvm.valueChanged(xval);\n      };\n    }\n\n    this.options.tooltips = {\n      enabled: false\n    };\n    this.tooltips = [];\n    /*if (!this.options.scales.yAxes) this.options.scales.yAxes = [{}];\n    this.options.scales.yAxes[0].ticks = {\n      max: 5,\n      min: 0,\n      stepSize: 0.5\n    };*/\n  };\n\n  _proto.valueChanged = function valueChanged(value) {\n    console.log('chartjs barplot valuechanged:', value);\n  };\n\n  return ChartjsBarplot;\n}(_chartjs.Chartjs), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"id\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"fromid\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"labels\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"refindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"refvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"extremelimits\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '0,1';\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"normallimits\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"initialdata\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '7.5';\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"width\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '500';\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"height\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '50';\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"nominal\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0.01;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"twoway\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"responsive\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\nexports.ChartjsBarplot = ChartjsBarplot;\n//# sourceMappingURL=chartjs-barplot.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-barplot\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-barplot.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-barplot.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template bindable=\\\"width,height\\\">\\n    <div id=\\\"canvas-holder\\\">\\n        <canvas id=\\\"${id}-canvas\\\" ref=\\\"chartcanvas\\\" width=\\\"${width}\\\" height=\\\"${height}\\\"></canvas>\\n    </div>\\n</template>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMtYmFycGxvdC5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F1cmVsaWEtYm9keWxpZ2h0LXBsdWdpbi9kaXN0L25hdGl2ZS1tb2R1bGVzL2VsZW1lbnRzL2NoYXJ0anMtYmFycGxvdC5odG1sP2M3OWYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjx0ZW1wbGF0ZSBiaW5kYWJsZT1cXFwid2lkdGgsaGVpZ2h0XFxcIj5cXG4gICAgPGRpdiBpZD1cXFwiY2FudmFzLWhvbGRlclxcXCI+XFxuICAgICAgICA8Y2FudmFzIGlkPVxcXCIke2lkfS1jYW52YXNcXFwiIHJlZj1cXFwiY2hhcnRjYW52YXNcXFwiIHdpZHRoPVxcXCIke3dpZHRofVxcXCIgaGVpZ2h0PVxcXCIke2hlaWdodH1cXFwiPjwvY2FudmFzPlxcbiAgICA8L2Rpdj5cXG48L3RlbXBsYXRlPlwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-barplot.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-fixed":
/*!*********************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-fixed.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.ChartjsFixed = void 0;\n\nvar _aureliaTemplating = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n\nvar _chartjs = __webpack_require__(/*! ./chartjs */ \"aurelia-bodylight-plugin/elements/chartjs\");\n\nvar _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n/**\n * shows fixed curve at time -\n * on X is 0,1,2,3,4,5,6,7,8,9\n * on Y is values from FMU variables from refindex to refvalues\n */\nvar ChartjsFixed = (_dec = (0, _aureliaTemplating.useView)('./chartjs.html'), _dec(_class = (_class2 = /*#__PURE__*/function (_Chartjs) {\n  _inheritsLoose(ChartjsFixed, _Chartjs);\n\n  //@bindable cachesize;\n  function ChartjsFixed() {\n    var _this;\n\n    _this = _Chartjs.call(this) || this;\n\n    _initializerDefineProperty(_this, \"fromid\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"labels\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refindex\", _descriptor3, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refvalues\", _descriptor4, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"type\", _descriptor5, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"min\", _descriptor6, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"max\", _descriptor7, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"maxdata\", _descriptor8, _assertThisInitialized(_this));\n\n    _this.currentdataset = 0;\n\n    _this.handleValueChange = function (e) {\n      var j = _this.currentdataset; //all values from refindex to one dataset - as one curve\n\n      if (!_this.chart.data.datasets[j]) {\n        //do initialize dataset first\n        _this.chart.data.datasets.push({\n          data: e.detail.data.slice(_this.refindex, _this.refindex + _this.refvalues),\n          label: \"\",\n          backgroundColor: _this.selectColor(0),\n          borderColor: _this.selectColor(0),\n          borderWidth: 1,\n          pointRadius: 1,\n          fill: false\n        });\n      } else {\n        _this.chart.data.datasets[j].data = e.detail.data.slice(_this.refindex, _this.refindex + _this.refvalues);\n      } //do apply operation on each element of array\n\n\n      if (_this.operation && _this.operation[0]) _this.chart.data.datasets[j].data.map(function (item) {\n        return _this.operation[0](item);\n      });\n      if (_this.currentdataset >= _this.maxdata) _this.currentdataset = 0;else _this.currentdataset++;\n\n      _this.chart.update();\n    };\n\n    return _this;\n  }\n\n  var _proto = ChartjsFixed.prototype;\n\n  _proto.bind = function bind() {\n    _Chartjs.prototype.bind.call(this);\n\n    this.type = 'line';\n    this.options.legend.display = false;\n    var dataset = [];\n    dataset.push({\n      data: [],\n      label: \"\",\n      backgroundColor: this.selectColor(0),\n      borderColor: this.selectColor(0),\n      borderWidth: 1,\n      pointRadius: 1,\n      fill: false\n    });\n    this.data = {\n      labels: Array.from(Array(this.refvalues), function (_, x) {\n        return x + 1;\n      }),\n      //returns [1,2,3,..,refvalues]\n      datasets: dataset\n    }; //initialize colors for each dataset\n  };\n\n  _proto.attached = function attached() {\n    _Chartjs.prototype.attached.call(this);\n  };\n\n  return ChartjsFixed;\n}(_chartjs.Chartjs), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"fromid\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"labels\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"refindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"refvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"type\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"min\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, \"max\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, \"maxdata\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 3;\n  }\n})), _class2)) || _class);\nexports.ChartjsFixed = ChartjsFixed;\n//# sourceMappingURL=chartjs-fixed.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-fixed\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-fixed-xy":
/*!************************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-fixed-xy.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.ChartjsFixedXy = void 0;\n\nvar _aureliaTemplating = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n\nvar _chartjsFixed = __webpack_require__(/*! ./chartjs-fixed */ \"aurelia-bodylight-plugin/elements/chartjs-fixed\");\n\nvar _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n/**\n * shows fixed curve at time -\n * on X is 0,1,2,3,4,5,6,7,8,9\n * on Y is values from FMU variables from refindex to refvalues\n */\nvar ChartjsFixedXy = (_dec = (0, _aureliaTemplating.useView)('./chartjs.html'), _dec(_class = (_class2 = /*#__PURE__*/function (_ChartjsFixed) {\n  _inheritsLoose(ChartjsFixedXy, _ChartjsFixed);\n\n  //@bindable cachesize;\n  function ChartjsFixedXy() {\n    var _this;\n\n    _this = _ChartjsFixed.call(this) || this;\n\n    _initializerDefineProperty(_this, \"fromid\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"labels\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refindex\", _descriptor3, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refvalues\", _descriptor4, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"type\", _descriptor5, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"min\", _descriptor6, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"max\", _descriptor7, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"maxdata\", _descriptor8, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"xrefindex\", _descriptor9, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"xrefvalues\", _descriptor10, _assertThisInitialized(_this));\n\n    _this.currentdataset = 0;\n\n    _this.handleValueChange = function (e) {\n      var j = _this.currentdataset; //all values from refindex to one dataset - as one curve\n\n      var ydata = e.detail.data.slice(_this.refindex, _this.refindex + _this.refvalues);\n      var xdata = e.detail.data.slice(_this.xrefindex, _this.xrefindex + _this.xrefvalues); //\n\n      var data = [];\n\n      for (var i = 0; i < ydata.length; i++) {\n        data.push({\n          x: xdata[i],\n          y: ydata[i]\n        });\n      } //set labels to x axis\n\n\n      _this.chart.data.labels = xdata; //set data xy to chart struct\n\n      if (!_this.chart.data.datasets[j]) {\n        //do initialize dataset first\n        _this.chart.data.datasets.push({\n          data: data,\n          label: \"\",\n          backgroundColor: _this.selectColor(0),\n          borderColor: _this.selectColor(0),\n          borderWidth: 1,\n          pointRadius: 1,\n          fill: false\n        });\n      } else {\n        _this.chart.data.datasets[j].data = data;\n      } //do apply operation on each element of array\n\n\n      if (_this.operation && _this.operation[0]) _this.chart.data.datasets[j].data.map(function (item) {\n        return {\n          x: item.x,\n          y: _this.operation[0](item.y)\n        };\n      }); //operation on y\n\n      if (_this.currentdataset >= _this.maxdata) _this.currentdataset = 0;else _this.currentdataset++;\n\n      _this.chart.update();\n    };\n\n    return _this;\n  }\n\n  var _proto = ChartjsFixedXy.prototype;\n\n  _proto.bind = function bind() {\n    _ChartjsFixed.prototype.bind.call(this);\n\n    this.xrefindex = parseInt(this.xrefindex, 10);\n    if (!this.xrefindex) console.warn('xrefindex is not specified');\n    this.xrefvalues = parseInt(this.xrefvalues, 10);\n    if (this.xrefvalues !== this.refvalues) console.warn('xrefvalues must be equal to refvalues');\n  };\n\n  _proto.attached = function attached() {\n    _ChartjsFixed.prototype.attached.call(this);\n  };\n\n  return ChartjsFixedXy;\n}(_chartjsFixed.ChartjsFixed), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"fromid\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"labels\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"refindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"refvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"type\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"min\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, \"max\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, \"maxdata\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 3;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, \"xrefindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, \"xrefvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexports.ChartjsFixedXy = ChartjsFixedXy;\n//# sourceMappingURL=chartjs-fixed-xy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-fixed-xy\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-fixed-xy.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-fixed-xy.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template></template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMtZml4ZWQteHkuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWJvZHlsaWdodC1wbHVnaW4vZGlzdC9uYXRpdmUtbW9kdWxlcy9lbGVtZW50cy9jaGFydGpzLWZpeGVkLXh5Lmh0bWw/YTIyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHRlbXBsYXRlPjwvdGVtcGxhdGU+XFxuXCI7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-fixed-xy.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-fixed.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-fixed.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template></template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMtZml4ZWQuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWJvZHlsaWdodC1wbHVnaW4vZGlzdC9uYXRpdmUtbW9kdWxlcy9lbGVtZW50cy9jaGFydGpzLWZpeGVkLmh0bWw/NTc1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHRlbXBsYXRlPjwvdGVtcGxhdGU+XFxuXCI7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-fixed.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-time":
/*!********************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-time.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.ChartjsTime = void 0;\n\nvar _aureliaTemplating = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n\nvar _chartjs = __webpack_require__(/*! ./chartjs */ \"aurelia-bodylight-plugin/elements/chartjs\");\n\nvar _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n//import {PLATFORM} from 'aurelia-pal';\n//@customElement\n//@useView(PLATFORM.moduleName('./bdl-chartjs.html'))\nvar ChartjsTime = (_dec = (0, _aureliaTemplating.useView)('./chartjs.html'), _dec(_class = (_class2 = /*#__PURE__*/function (_Chartjs) {\n  _inheritsLoose(ChartjsTime, _Chartjs);\n\n  function ChartjsTime() {\n    var _this;\n\n    _this = _Chartjs.call(this) || this; //this.type = 'line';\n\n    _initializerDefineProperty(_this, \"fromid\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"labels\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refindex\", _descriptor3, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refvalues\", _descriptor4, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"type\", _descriptor5, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"min\", _descriptor6, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"max\", _descriptor7, _assertThisInitialized(_this));\n\n    _this.handleValueChange = function (e) {\n      //e.detail do not reallocate - using same buffer, thus slicing to append to data array\n      //let datapoints =e.detail.data.slice(this.refindex, this.refendindex);\n      var j = 0;\n\n      for (var i = _this.refindex; i < _this.refindex + _this.refvalues; i++) {\n        //adds data to datasets\n        //if convert operation is defined as array then convert\n        if (_this.operation && _this.operation[j]) _this.chart.data.datasets[j].data.push(_this.operation[j](e.detail.data[i])); //else push data directly\n        else _this.chart.data.datasets[j].data.push(e.detail.data[i]);\n\n        if (_this.chart.data.datasets[j].data.length > _this.maxdata) {\n          //console.log('shifting dataset chartjs-time', this.chart.data.datasets[j].data);\n          _this.chart.data.datasets[j].data.shift();\n        }\n\n        j++;\n      }\n\n      _this.chart.data.labels.push(e.detail.time);\n\n      if (_this.chart.data.labels.length > _this.maxdata) {\n        _this.chart.data.labels.shift();\n\n        if (_this.sectionid) {\n          //shift sections\n          if (_this.chart.config.options.section[0].index === 0) _this.chart.config.options.section.shift(); //decrement all indices in sections\n\n          for (var _i = 0; _i < _this.chart.config.options.section.length; _i++) {\n            _this.chart.config.options.section[_i].index -= 1;\n          }\n        }\n      } //shift - remove first element if data is too big\n      //console.log('chartjs handlevaluechange() chart.data.datasets[0].data', this.chart.data.datasets[0].data);\n\n\n      _this.chart.update();\n    };\n\n    return _this;\n  }\n  /**\n   * sets all tim-series specific options for chartjs\n   */\n\n\n  var _proto = ChartjsTime.prototype;\n\n  _proto.bind = function bind() {\n    _Chartjs.prototype.bind.call(this); //done in super\n    //this.chlabels = this.labels.split(','); //labels for each dataset\n    //this.colors = [];\n\n\n    var datasets = [];\n    var mydata1 = this.initialdata.split(';');\n\n    for (var i = 0; i < this.refvalues + 1; i++) {\n      //mydata[0] == timelabels in x axis, mydata[1..n] ar in y axis\n      var mydata2 = mydata1[i] ? mydata1[i].split(',') : [];\n      this.mydata[i] = mydata2.map(function (x) {\n        return parseFloat(x);\n      }); //console.log('chartjstime mydata i',this.mydata[i]);\n    } //initialize colors for each dataset\n\n\n    for (var _i2 = 0; _i2 < this.refvalues; _i2++) {\n      //this.colors.push(this.selectColor(i));\n      datasets.push({\n        data: this.mydata[_i2 + 1],\n        label: this.chlabels[_i2],\n        backgroundColor: this.selectColor(_i2),\n        borderColor: this.selectColor(_i2),\n        borderWidth: 1,\n        pointRadius: 1,\n        fill: false\n      }); //timelabels.push(i);\n    }\n\n    this.data = {\n      labels: this.mydata[0],\n      datasets: datasets\n    };\n    if (this.verticalline) this.type = 'LineWithLine';else this.type = 'line';\n\n    if (this.min) {\n      //sets yscale min\n      if (!this.options) this.options = {};\n      if (!this.options.scales) this.options.scales = {};\n      if (!this.options.scales.yAxes) this.options.scales.yAxes = [{}]; //chartjs 2.9.4\n\n      if (!this.options.scales.yAxes[0].ticks) this.options.scales.yAxes[0].ticks = {}; //chartjs 2.9.4\n\n      this.options.scales.yAxes[0].ticks.min = parseFloat(this.min);\n    }\n\n    if (this.max) {\n      //sets yscale max\n      if (!this.options) this.options = {};\n      if (!this.options.scales) this.options.scales = {};\n      if (!this.options.scales.yAxes) this.options.scales.yAxes = [{}]; //chartjs 2.9.4\n\n      if (!this.options.scales.yAxes[0].ticks) this.options.scales.yAxes[0].ticks = {}; //chartjs 2.9.4\n\n      this.options.scales.yAxes[0].ticks.max = parseFloat(this.max); //if (this.min) this.options.scales.yAxes[0].ticks.stepSize = (this.options.scales.yAxes[0].ticks.max - this.options.scales.yAxes[0].ticks.min) / 10;\n    }\n  };\n\n  _proto.resetdata = function resetdata() {\n    //super.resetdata();\n    for (var j = 0; j < this.refvalues; j++) {\n      this.chart.data.datasets[j].data = [];\n    }\n\n    this.chart.data.labels = [];\n    this.chart.update();\n  };\n\n  return ChartjsTime;\n}(_chartjs.Chartjs), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"fromid\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"labels\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"refindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"refvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"type\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"min\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, \"max\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexports.ChartjsTime = ChartjsTime;\n//# sourceMappingURL=chartjs-time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-time\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-time.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-time.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template><!-- not used, inherited from chartjs--></template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMtdGltZS5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F1cmVsaWEtYm9keWxpZ2h0LXBsdWdpbi9kaXN0L25hdGl2ZS1tb2R1bGVzL2VsZW1lbnRzL2NoYXJ0anMtdGltZS5odG1sPzZjNzIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjx0ZW1wbGF0ZT48IS0tIG5vdCB1c2VkLCBpbmhlcml0ZWQgZnJvbSBjaGFydGpzLS0+PC90ZW1wbGF0ZT5cXG5cIjsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-time.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-xy":
/*!******************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-xy.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.ChartjsXy = void 0;\n\nvar _chartjsTime = __webpack_require__(/*! ./chartjs-time */ \"aurelia-bodylight-plugin/elements/chartjs-time\");\n\nvar _aureliaTemplating = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n\nvar _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n//import {PLATFORM} from 'aurelia-pal';\n//@useView(PLATFORM.moduleName('./bdl-chartjs.html'))\nvar ChartjsXy = (_dec = (0, _aureliaTemplating.useView)('./chartjs.html'), _dec(_class = (_class2 = /*#__PURE__*/function (_ChartjsTime) {\n  _inheritsLoose(ChartjsXy, _ChartjsTime);\n\n  function ChartjsXy() {\n    var _this;\n\n    _this = _ChartjsTime.call(this) || this;\n\n    _initializerDefineProperty(_this, \"fromid\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"labels\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refindex\", _descriptor3, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refvalues\", _descriptor4, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"type\", _descriptor5, _assertThisInitialized(_this));\n\n    _this.showlines = true;\n\n    _this.handleValueChange = function (e) {\n      //e.detail do not reallocate - using same buffer, thus slicing to append to data array\n      //let datapoints =e.detail.data.slice(this.refindex, this.refendindex);\n      var j = 0; //put first value on x axis, others on y axis other values\n\n      for (var i = _this.refindex + 1; i < _this.refindex + _this.refvalues; i++) {\n        _this.chart.data.datasets[j].data.push({\n          x: e.detail.data[_this.refindex],\n          y: e.detail.data[i]\n        }); //console.log('adding from data[], i, data[i]', e.detail.data, i, e.detail.data[i]);\n\n\n        if (_this.chart.data.datasets[j].data.length > _this.maxdata) {\n          //console.log('shifting dataset chartjs-xy', this.chart.data.datasets[j].data);\n          _this.chart.data.datasets[j].data.shift();\n        }\n\n        j++;\n      } //console.log('chartjs-xy handlevaluechange datasets, e.detail.data',this.chart.data.datasets, e.detail.data);\n\n\n      _this.chart.update();\n    };\n\n    return _this;\n  }\n\n  var _proto = ChartjsXy.prototype;\n\n  _proto.bind = function bind() {\n    var _this2 = this;\n\n    _ChartjsTime.prototype.bind.call(this);\n\n    var datasets = [];\n    var mydata1 = this.initialdata.split(';'); //initialize x and y, x is first dataset, y is al the rest\n\n    this.mydata = [];\n\n    for (var i = 0; i < this.refvalues; i++) {\n      var mydata2 = mydata1[i] ? mydata1[i].split(',') : [];\n\n      if (i === 0) {\n        //parse x\n        this.mydata[0] = mydata2.map(function (x, index) {\n          return parseFloat(x);\n        });\n      } else {\n        //parse all y\n        this.mydata[i] = mydata2.map(function (yy, index) {\n          return {\n            x: _this2.mydata[0][index],\n            y: parseFloat(yy)\n          };\n        });\n      }\n    } //this.colors already set in super()\n\n\n    for (var _i = 1; _i < this.refvalues; _i++) {\n      datasets.push({\n        data: this.mydata[_i],\n        label: this.chlabels[_i],\n        backgroundColor: this.colors[_i - 1],\n        borderColor: this.colors[_i - 1],\n        fill: false,\n        showLine: this.showlines,\n        borderWidth: 1,\n        refvalues: this.refvalues\n      });\n    } //add additional data, all after ; is taken as x values separated by , of initial curve,\n    // after ; is y values of initial curve separated by ,\n    // if more curves then another ;. E.g. initialdata=\";;0,0.00015;0,28000;0,0.00015;0,1400\"\n    // -> line from 0 0 to 0.0015 28000 and from 0 0 to 00015 1400\n\n\n    if (mydata1.length > this.refvalues) {\n      var j = this.refvalues;\n\n      var _loop = function _loop(_i2) {\n        var mydata2 = mydata1[_i2].split(',');\n\n        var mydata3 = mydata1[_i2 + 1].split(',');\n\n        _this2.mydata[j] = mydata3.map(function (yy, index) {\n          return {\n            x: parseFloat(mydata2[index]),\n            y: parseFloat(yy)\n          };\n        });\n        datasets.push({\n          data: _this2.mydata[j],\n          backgroundColor: _this2.selectColor(_i2),\n          borderColor: _this2.selectColor(_i2),\n          fill: false,\n          showLine: _this2.showlines\n        });\n        j++;\n      };\n\n      for (var _i2 = this.refvalues; _i2 < mydata1.length; _i2 += 2) {\n        _loop(_i2);\n      }\n    }\n\n    this.data = {\n      datasets: datasets\n    };\n    this.type = 'scatter';\n    this.options.tooltips.mode = 'nearest';\n    this.options.elements = {\n      point: {\n        radius: this.customRadius,\n        display: true\n      }\n    };\n  };\n\n  _proto.customRadius = function customRadius(context) {\n    var last = context.dataIndex === context.dataset.data.length - 1;\n    var inrefvalues = context.datasetIndex < context.dataset.refvalues; //dataset is in refvalues - changed by simulator\n\n    if (inrefvalues) return last ? 3 : 1;\n    return 1; //dataset is fixed - background borders\n  };\n\n  _proto.resetdata = function resetdata() {\n    var j = 0;\n\n    for (var i = this.refindex + 1; i < this.refindex + this.refvalues; i++) {\n      this.chart.data.datasets[j].data = [];\n      j++;\n    }\n  };\n\n  return ChartjsXy;\n}(_chartjsTime.ChartjsTime), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"fromid\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"labels\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"refindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"refvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"type\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexports.ChartjsXy = ChartjsXy;\n//# sourceMappingURL=chartjs-xy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-xy\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-xy-points":
/*!*************************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-xy-points.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.ChartjsXyPoints = void 0;\n\nvar _chartjsXy = __webpack_require__(/*! ./chartjs-xy */ \"aurelia-bodylight-plugin/elements/chartjs-xy\");\n\nvar _aureliaTemplating = __webpack_require__(/*! aurelia-templating */ \"hij8\");\n\nvar _chart = _interopRequireDefault(__webpack_require__(/*! chart.js */ \"MO+k\"));\n\nvar _dec, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\n//import {PLATFORM} from 'aurelia-pal';\n//@useView(PLATFORM.moduleName('./bdl-chartjs.html'))\n//modified simple implementation of throttle from https://jsfiddle.net/jonathansampson/m7G64/\nfunction throttle(callback, limit) {\n  var wait = false; // Initially, we're not waiting\n\n  return function () {\n    // We return a throttled function\n    if (!wait) {\n      // If we're not waiting\n      callback.call(); // Execute users function\n\n      wait = true; // Prevent future invocations\n\n      setTimeout(function () {\n        // After a period of time\n        wait = false; // And allow future invocations\n      }, limit);\n    }\n  };\n}\n\nvar ChartjsXyPoints = (_dec = (0, _aureliaTemplating.useView)('./chartjs-xy-points.html'), _dec(_class = (_class2 = /*#__PURE__*/function (_ChartjsXy) {\n  _inheritsLoose(ChartjsXyPoints, _ChartjsXy);\n\n  function ChartjsXyPoints() {\n    var _this;\n\n    _this = _ChartjsXy.call(this) || this;\n\n    _initializerDefineProperty(_this, \"fromid\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"labels\", _descriptor2, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refindex\", _descriptor3, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"refvalues\", _descriptor4, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"min\", _descriptor5, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"max\", _descriptor6, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"xmin\", _descriptor7, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"xmax\", _descriptor8, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"atitle\", _descriptor9, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"rtitle\", _descriptor10, _assertThisInitialized(_this));\n\n    _this.showlines = false;\n\n    _initializerDefineProperty(_this, \"convertors\", _descriptor11, _assertThisInitialized(_this));\n\n    _this.index = 0;\n\n    _this.handleValueChange = function (e) {\n      //e.detail do not reallocate - using same buffer, thus slicing to append to data array\n      var rawdata = e.detail.data.slice(_this.refindex, _this.refendindex); //do value conversion based on convertors\n\n      if (_this.operation) {\n        for (var i = 0; i < rawdata.length; i++) {\n          //if particular operation is defined\n          if (_this.operation[i]) rawdata[i] = _this.operation[i](rawdata[i]);\n        }\n      }\n\n      var j = 0; //put each first value on x axis, second on y axis\n\n      for (var _i = 1; _i < _this.refvalues; _i = _i + 2) {\n        //remember only current x,y value - on the index\n        _this.chart.data.datasets[j].data[_this.index] = {\n          x: rawdata[_i - 1],\n          y: rawdata[_i]\n        }; //increment dataset - if more dataset are available\n\n        j++;\n      } //throttle - update values every 1 s only\n\n\n      throttle(_this.chart.update(), 1000);\n    };\n\n    return _this;\n  }\n\n  var _proto = ChartjsXyPoints.prototype;\n\n  _proto.bind = function bind() {\n    _ChartjsXy.prototype.bind.call(this);\n\n    console.log('chartjs xy point bind()');\n\n    if (this.xmin) {\n      //sets yscale min\n      if (!this.options) this.options = {};\n      if (!this.options.scales) this.options.scales = {};\n      if (!this.options.scales.xAxes) this.options.scales.xAxes = [{}]; //chartjs 2.9.4\n\n      if (!this.options.scales.xAxes[0].ticks) this.options.scales.xAxes[0].ticks = {}; //chartjs 2.9.4\n\n      this.options.scales.xAxes[0].ticks.min = parseFloat(this.xmin);\n    }\n\n    if (this.xmax) {\n      //sets yscale max\n      if (!this.options) this.options = {};\n      if (!this.options.scales) this.options.scales = {};\n      if (!this.options.scales.xAxes) this.options.scales.xAxes = [{}]; //chartjs 2.9.4\n\n      if (!this.options.scales.xAxes[0].ticks) this.options.scales.xAxes[0].ticks = {}; //chartjs 2.9.4\n\n      this.options.scales.xAxes[0].ticks.max = parseFloat(this.xmax); //if (this.min) this.options.scales.yAxes[0].ticks.stepSize = (this.options.scales.yAxes[0].ticks.max - this.options.scales.yAxes[0].ticks.min) / 10;\n    } //customize tooltip display\n\n\n    this.options.tooltips.callbacks = {\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += '(' + tooltipItem.xLabel.toPrecision(3) + ',' + tooltipItem.yLabel.toPrecision(3) + ')';\n        return label;\n      },\n      footer: function footer(tooltipItem, data) {\n        if (data.datasets.length < 2) return tooltipItem[0].yLabel;\n        var label = []; //label.push('| ' + data.datasets[0].data[tooltipItem[0].index].y.toPrecision(3) + ' - ' + data.datasets[1].data[tooltipItem[0].index].y.toPrecision(3) + ' |');\n\n        label.push('Δ ' + Math.abs(data.datasets[0].data[tooltipItem[0].index].y - data.datasets[1].data[tooltipItem[0].index].y).toPrecision(3));\n        return label;\n      }\n    };\n    this.type = 'scatter';\n    this.plugins = null;\n    this.options.XYPlugin = true;\n  };\n\n  _proto.attached = function attached() {\n    //register horizontal line drawing, shows difference line between appropriate points from dataset0 and dataset1\n    _chart.default.pluginService.register({\n      beforeDraw: function beforeDraw(chart, ease) {\n        if (chart.config.options.XYPlugin && chart.tooltip._active && chart.tooltip._active.length) {\n          var activePoint = chart.tooltip._active[0]; //console.log('chart horizontal line debug chart activepoint:', activePoint);\n\n          var ctx = chart.ctx;\n          var y = activePoint.tooltipPosition().y; //let topY = this.chart.legend.bottom;\n\n          var leftX = chart.chartArea.left; //let bottomY = this.chart.chartArea.bottom;\n\n          var rightX = chart.chartArea.right; // draw line\n\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(leftX, y);\n          ctx.lineTo(rightX, y);\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = '#ff9c9c';\n          ctx.stroke();\n          var meta1 = chart.getDatasetMeta(0);\n          var meta2 = chart.getDatasetMeta(1);\n\n          if (meta1) {\n            //draw second line\n            //console.log('plugin meta', chart, meta);\n            var secondy2 = meta1.data[activePoint._index]._model.y;\n            var secondy = secondy2 !== y ? secondy2 : meta2.data[activePoint._index]._model.y; //let stop  = meta.data[chart.config.options.section[i].index]._model.x;\n\n            ctx.beginPath();\n            ctx.moveTo(leftX, secondy);\n            ctx.lineTo(rightX, secondy);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = '#ff9c9c';\n            ctx.stroke();\n            var x = activePoint.tooltipPosition().x;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            var sy = y > secondy ? 3 : -3; //small arrow up\n\n            ctx.lineTo(x - sy, y - sy);\n            ctx.lineTo(x + sy, y - sy); //line\n\n            ctx.lineTo(x, y);\n            ctx.lineTo(x, secondy); //small arrow down\n\n            ctx.lineTo(x - sy, secondy + sy);\n            ctx.lineTo(x + sy, secondy + sy);\n            ctx.lineTo(x, secondy);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = '#7b7bff';\n            ctx.stroke();\n          }\n\n          ctx.restore();\n        }\n      }\n    });\n\n    _ChartjsXy.prototype.attached.call(this);\n  };\n\n  _proto.addpoint = function addpoint() {\n    this.index++;\n  };\n\n  _proto.removepoint = function removepoint() {\n    if (this.index > 0) this.index--;\n  };\n\n  return ChartjsXyPoints;\n}(_chartjsXy.ChartjsXy), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"fromid\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"labels\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"refindex\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"refvalues\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"min\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"max\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, \"xmin\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, \"xmax\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, \"atitle\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'Add Point';\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, \"rtitle\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 'Remove Point';\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, \"convertors\", [_aureliaTemplating.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexports.ChartjsXyPoints = ChartjsXyPoints;\n//# sourceMappingURL=chartjs-xy-points.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-xy-points\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-xy-points.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-xy-points.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template bindable=\\\"width,height\\\">\\n    <div id=\\\"canvas-holder\\\">\\n        <div class=\\\"w3-small\\\">\\n            <i class=\\\"fa fa-download fa-flip-horizontal\\\" title=\\\"download csv data, row=data in time point\\\"\\n               click.delegate=\\\"download()\\\"> </i>\\n            <i class=\\\"fa fa-download fa-rotate-270\\\" title=\\\"download flat csv data, row=all data for variable\\\"\\n               click.delegate=\\\"downloadflat()\\\"> </i>\\n\\n        </div>\\n        <div style=\\\"margin-top: -1.5em\\\">\\n            <canvas id=\\\"${id}-canvas\\\" ref=\\\"chartcanvas\\\" width=\\\"${width}\\\" height=\\\"${height}\\\"></canvas>\\n        </div>\\n        <button click.delegate=\\\"addpoint()\\\">${atitle}</button><button click.delegate=\\\"removepoint()\\\">${rtitle}</button>\\n    </div>\\n</template>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMteHktcG9pbnRzLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2Rpc3QvbmF0aXZlLW1vZHVsZXMvZWxlbWVudHMvY2hhcnRqcy14eS1wb2ludHMuaHRtbD8xNDMyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8dGVtcGxhdGUgYmluZGFibGU9XFxcIndpZHRoLGhlaWdodFxcXCI+XFxuICAgIDxkaXYgaWQ9XFxcImNhbnZhcy1ob2xkZXJcXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwidzMtc21hbGxcXFwiPlxcbiAgICAgICAgICAgIDxpIGNsYXNzPVxcXCJmYSBmYS1kb3dubG9hZCBmYS1mbGlwLWhvcml6b250YWxcXFwiIHRpdGxlPVxcXCJkb3dubG9hZCBjc3YgZGF0YSwgcm93PWRhdGEgaW4gdGltZSBwb2ludFxcXCJcXG4gICAgICAgICAgICAgICBjbGljay5kZWxlZ2F0ZT1cXFwiZG93bmxvYWQoKVxcXCI+IDwvaT5cXG4gICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtZG93bmxvYWQgZmEtcm90YXRlLTI3MFxcXCIgdGl0bGU9XFxcImRvd25sb2FkIGZsYXQgY3N2IGRhdGEsIHJvdz1hbGwgZGF0YSBmb3IgdmFyaWFibGVcXFwiXFxuICAgICAgICAgICAgICAgY2xpY2suZGVsZWdhdGU9XFxcImRvd25sb2FkZmxhdCgpXFxcIj4gPC9pPlxcblxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8ZGl2IHN0eWxlPVxcXCJtYXJnaW4tdG9wOiAtMS41ZW1cXFwiPlxcbiAgICAgICAgICAgIDxjYW52YXMgaWQ9XFxcIiR7aWR9LWNhbnZhc1xcXCIgcmVmPVxcXCJjaGFydGNhbnZhc1xcXCIgd2lkdGg9XFxcIiR7d2lkdGh9XFxcIiBoZWlnaHQ9XFxcIiR7aGVpZ2h0fVxcXCI+PC9jYW52YXM+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxidXR0b24gY2xpY2suZGVsZWdhdGU9XFxcImFkZHBvaW50KClcXFwiPiR7YXRpdGxlfTwvYnV0dG9uPjxidXR0b24gY2xpY2suZGVsZWdhdGU9XFxcInJlbW92ZXBvaW50KClcXFwiPiR7cnRpdGxlfTwvYnV0dG9uPlxcbiAgICA8L2Rpdj5cXG48L3RlbXBsYXRlPlwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-xy-points.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs-xy.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs-xy.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template><!-- not used, inherited from chartjs--></template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMteHkuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWJvZHlsaWdodC1wbHVnaW4vZGlzdC9uYXRpdmUtbW9kdWxlcy9lbGVtZW50cy9jaGFydGpzLXh5Lmh0bWw/ZDFmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHRlbXBsYXRlPjwhLS0gbm90IHVzZWQsIGluaGVyaXRlZCBmcm9tIGNoYXJ0anMtLT48L3RlbXBsYXRlPlxcblwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs-xy.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/chartjs.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/chartjs.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template bindable=\\\"width,height\\\">\\n    <div id=\\\"canvas-holder\\\">\\n        <div class=\\\"w3-small\\\">\\n            <i class=\\\"fa fa-download fa-flip-horizontal\\\" title=\\\"download csv data, row=data in time point\\\"\\n               click.delegate=\\\"download()\\\"> </i>\\n            <i class=\\\"fa fa-download fa-rotate-270\\\" title=\\\"download flat csv data, row=all data for variable\\\"\\n               click.delegate=\\\"downloadflat()\\\"> </i>\\n        </div>\\n        <div style=\\\"margin-top: -1.5em\\\">\\n            <canvas id=\\\"${id}-canvas\\\" ref=\\\"chartcanvas\\\" width=\\\"${width}\\\" height=\\\"${height}\\\"></canvas>\\n        </div>\\n    </div>\\n</template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoYXJ0anMuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWJvZHlsaWdodC1wbHVnaW4vZGlzdC9uYXRpdmUtbW9kdWxlcy9lbGVtZW50cy9jaGFydGpzLmh0bWw/MmNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHRlbXBsYXRlIGJpbmRhYmxlPVxcXCJ3aWR0aCxoZWlnaHRcXFwiPlxcbiAgICA8ZGl2IGlkPVxcXCJjYW52YXMtaG9sZGVyXFxcIj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInczLXNtYWxsXFxcIj5cXG4gICAgICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtZG93bmxvYWQgZmEtZmxpcC1ob3Jpem9udGFsXFxcIiB0aXRsZT1cXFwiZG93bmxvYWQgY3N2IGRhdGEsIHJvdz1kYXRhIGluIHRpbWUgcG9pbnRcXFwiXFxuICAgICAgICAgICAgICAgY2xpY2suZGVsZWdhdGU9XFxcImRvd25sb2FkKClcXFwiPiA8L2k+XFxuICAgICAgICAgICAgPGkgY2xhc3M9XFxcImZhIGZhLWRvd25sb2FkIGZhLXJvdGF0ZS0yNzBcXFwiIHRpdGxlPVxcXCJkb3dubG9hZCBmbGF0IGNzdiBkYXRhLCByb3c9YWxsIGRhdGEgZm9yIHZhcmlhYmxlXFxcIlxcbiAgICAgICAgICAgICAgIGNsaWNrLmRlbGVnYXRlPVxcXCJkb3dubG9hZGZsYXQoKVxcXCI+IDwvaT5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGRpdiBzdHlsZT1cXFwibWFyZ2luLXRvcDogLTEuNWVtXFxcIj5cXG4gICAgICAgICAgICA8Y2FudmFzIGlkPVxcXCIke2lkfS1jYW52YXNcXFwiIHJlZj1cXFwiY2hhcnRjYW52YXNcXFwiIHdpZHRoPVxcXCIke3dpZHRofVxcXCIgaGVpZ2h0PVxcXCIke2hlaWdodH1cXFwiPjwvY2FudmFzPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuXCI7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/chartjs.html\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/checkbox":
/*!****************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/checkbox.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.Checkbox = void 0;\n\nvar _aureliaFramework = __webpack_require__(/*! aurelia-framework */ \"aurelia-framework\");\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nvar Checkbox = (_class = /*#__PURE__*/function () {\n  function Checkbox() {\n    _initializerDefineProperty(this, \"min\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"max\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"titlemax\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"titlemin\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"default\", _descriptor6, this);\n\n    this.value = void 0;\n    this.isChecked = false;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.bind = function bind() {\n    if (this.default) {\n      //console.log('checkbox default,', this.default);\n      this.isChecked = this.default === 'true';\n    }\n\n    if (!this.titlemax) this.titlemax = this.title;\n    if (!this.titlemin) this.titlemin = this.title; //console.log('checkbox bind() min:' + this.min + ' max:' + this.max + ' default:' + this.default + ' ischecked' + this.isChecked);\n  };\n\n  return Checkbox;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"min\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"max\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"title\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"titlemax\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"titlemin\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"default\", [_aureliaFramework.bindable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\nexports.Checkbox = Checkbox;\n//# sourceMappingURL=checkbox.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoZWNrYm94LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F1cmVsaWEtYm9keWxpZ2h0LXBsdWdpbi9kaXN0L25hdGl2ZS1tb2R1bGVzL2VsZW1lbnRzL2NoZWNrYm94LmpzP2QwNDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkNoZWNrYm94ID0gdm9pZCAwO1xuXG52YXIgX2F1cmVsaWFGcmFtZXdvcmsgPSByZXF1aXJlKFwiYXVyZWxpYS1mcmFtZXdvcmtcIik7XG5cbnZhciBfY2xhc3MsIF9kZXNjcmlwdG9yLCBfZGVzY3JpcHRvcjIsIF9kZXNjcmlwdG9yMywgX2Rlc2NyaXB0b3I0LCBfZGVzY3JpcHRvcjUsIF9kZXNjcmlwdG9yNjtcblxuZnVuY3Rpb24gX2luaXRpYWxpemVyRGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eSwgZGVzY3JpcHRvciwgY29udGV4dCkgeyBpZiAoIWRlc2NyaXB0b3IpIHJldHVybjsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHksIHsgZW51bWVyYWJsZTogZGVzY3JpcHRvci5lbnVtZXJhYmxlLCBjb25maWd1cmFibGU6IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlLCB3cml0YWJsZTogZGVzY3JpcHRvci53cml0YWJsZSwgdmFsdWU6IGRlc2NyaXB0b3IuaW5pdGlhbGl6ZXIgPyBkZXNjcmlwdG9yLmluaXRpYWxpemVyLmNhbGwoY29udGV4dCkgOiB2b2lkIDAgfSk7IH1cblxuZnVuY3Rpb24gX2FwcGx5RGVjb3JhdGVkRGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5LCBkZWNvcmF0b3JzLCBkZXNjcmlwdG9yLCBjb250ZXh0KSB7IHZhciBkZXNjID0ge307IE9iamVjdC5rZXlzKGRlc2NyaXB0b3IpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBkZXNjW2tleV0gPSBkZXNjcmlwdG9yW2tleV07IH0pOyBkZXNjLmVudW1lcmFibGUgPSAhIWRlc2MuZW51bWVyYWJsZTsgZGVzYy5jb25maWd1cmFibGUgPSAhIWRlc2MuY29uZmlndXJhYmxlOyBpZiAoJ3ZhbHVlJyBpbiBkZXNjIHx8IGRlc2MuaW5pdGlhbGl6ZXIpIHsgZGVzYy53cml0YWJsZSA9IHRydWU7IH0gZGVzYyA9IGRlY29yYXRvcnMuc2xpY2UoKS5yZXZlcnNlKCkucmVkdWNlKGZ1bmN0aW9uIChkZXNjLCBkZWNvcmF0b3IpIHsgcmV0dXJuIGRlY29yYXRvcih0YXJnZXQsIHByb3BlcnR5LCBkZXNjKSB8fCBkZXNjOyB9LCBkZXNjKTsgaWYgKGNvbnRleHQgJiYgZGVzYy5pbml0aWFsaXplciAhPT0gdm9pZCAwKSB7IGRlc2MudmFsdWUgPSBkZXNjLmluaXRpYWxpemVyID8gZGVzYy5pbml0aWFsaXplci5jYWxsKGNvbnRleHQpIDogdm9pZCAwOyBkZXNjLmluaXRpYWxpemVyID0gdW5kZWZpbmVkOyB9IGlmIChkZXNjLmluaXRpYWxpemVyID09PSB2b2lkIDApIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHksIGRlc2MpOyBkZXNjID0gbnVsbDsgfSByZXR1cm4gZGVzYzsgfVxuXG5mdW5jdGlvbiBfaW5pdGlhbGl6ZXJXYXJuaW5nSGVscGVyKGRlc2NyaXB0b3IsIGNvbnRleHQpIHsgdGhyb3cgbmV3IEVycm9yKCdEZWNvcmF0aW5nIGNsYXNzIHByb3BlcnR5IGZhaWxlZC4gUGxlYXNlIGVuc3VyZSB0aGF0ICcgKyAncHJvcG9zYWwtY2xhc3MtcHJvcGVydGllcyBpcyBlbmFibGVkIGFuZCBydW5zIGFmdGVyIHRoZSBkZWNvcmF0b3JzIHRyYW5zZm9ybS4nKTsgfVxuXG52YXIgQ2hlY2tib3ggPSAoX2NsYXNzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ2hlY2tib3goKSB7XG4gICAgX2luaXRpYWxpemVyRGVmaW5lUHJvcGVydHkodGhpcywgXCJtaW5cIiwgX2Rlc2NyaXB0b3IsIHRoaXMpO1xuXG4gICAgX2luaXRpYWxpemVyRGVmaW5lUHJvcGVydHkodGhpcywgXCJtYXhcIiwgX2Rlc2NyaXB0b3IyLCB0aGlzKTtcblxuICAgIF9pbml0aWFsaXplckRlZmluZVByb3BlcnR5KHRoaXMsIFwidGl0bGVcIiwgX2Rlc2NyaXB0b3IzLCB0aGlzKTtcblxuICAgIF9pbml0aWFsaXplckRlZmluZVByb3BlcnR5KHRoaXMsIFwidGl0bGVtYXhcIiwgX2Rlc2NyaXB0b3I0LCB0aGlzKTtcblxuICAgIF9pbml0aWFsaXplckRlZmluZVByb3BlcnR5KHRoaXMsIFwidGl0bGVtaW5cIiwgX2Rlc2NyaXB0b3I1LCB0aGlzKTtcblxuICAgIF9pbml0aWFsaXplckRlZmluZVByb3BlcnR5KHRoaXMsIFwiZGVmYXVsdFwiLCBfZGVzY3JpcHRvcjYsIHRoaXMpO1xuXG4gICAgdGhpcy52YWx1ZSA9IHZvaWQgMDtcbiAgICB0aGlzLmlzQ2hlY2tlZCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IENoZWNrYm94LnByb3RvdHlwZTtcblxuICBfcHJvdG8uYmluZCA9IGZ1bmN0aW9uIGJpbmQoKSB7XG4gICAgaWYgKHRoaXMuZGVmYXVsdCkge1xuICAgICAgLy9jb25zb2xlLmxvZygnY2hlY2tib3ggZGVmYXVsdCwnLCB0aGlzLmRlZmF1bHQpO1xuICAgICAgdGhpcy5pc0NoZWNrZWQgPSB0aGlzLmRlZmF1bHQgPT09ICd0cnVlJztcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMudGl0bGVtYXgpIHRoaXMudGl0bGVtYXggPSB0aGlzLnRpdGxlO1xuICAgIGlmICghdGhpcy50aXRsZW1pbikgdGhpcy50aXRsZW1pbiA9IHRoaXMudGl0bGU7IC8vY29uc29sZS5sb2coJ2NoZWNrYm94IGJpbmQoKSBtaW46JyArIHRoaXMubWluICsgJyBtYXg6JyArIHRoaXMubWF4ICsgJyBkZWZhdWx0OicgKyB0aGlzLmRlZmF1bHQgKyAnIGlzY2hlY2tlZCcgKyB0aGlzLmlzQ2hlY2tlZCk7XG4gIH07XG5cbiAgcmV0dXJuIENoZWNrYm94O1xufSgpLCAoX2Rlc2NyaXB0b3IgPSBfYXBwbHlEZWNvcmF0ZWREZXNjcmlwdG9yKF9jbGFzcy5wcm90b3R5cGUsIFwibWluXCIsIFtfYXVyZWxpYUZyYW1ld29yay5iaW5kYWJsZV0sIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB3cml0YWJsZTogdHJ1ZSxcbiAgaW5pdGlhbGl6ZXI6IGZ1bmN0aW9uIGluaXRpYWxpemVyKCkge1xuICAgIHJldHVybiAwO1xuICB9XG59KSwgX2Rlc2NyaXB0b3IyID0gX2FwcGx5RGVjb3JhdGVkRGVzY3JpcHRvcihfY2xhc3MucHJvdG90eXBlLCBcIm1heFwiLCBbX2F1cmVsaWFGcmFtZXdvcmsuYmluZGFibGVdLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgd3JpdGFibGU6IHRydWUsXG4gIGluaXRpYWxpemVyOiBmdW5jdGlvbiBpbml0aWFsaXplcigpIHtcbiAgICByZXR1cm4gMTtcbiAgfVxufSksIF9kZXNjcmlwdG9yMyA9IF9hcHBseURlY29yYXRlZERlc2NyaXB0b3IoX2NsYXNzLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCBbX2F1cmVsaWFGcmFtZXdvcmsuYmluZGFibGVdLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgd3JpdGFibGU6IHRydWUsXG4gIGluaXRpYWxpemVyOiBmdW5jdGlvbiBpbml0aWFsaXplcigpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cbn0pLCBfZGVzY3JpcHRvcjQgPSBfYXBwbHlEZWNvcmF0ZWREZXNjcmlwdG9yKF9jbGFzcy5wcm90b3R5cGUsIFwidGl0bGVtYXhcIiwgW19hdXJlbGlhRnJhbWV3b3JrLmJpbmRhYmxlXSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGVudW1lcmFibGU6IHRydWUsXG4gIHdyaXRhYmxlOiB0cnVlLFxuICBpbml0aWFsaXplcjogbnVsbFxufSksIF9kZXNjcmlwdG9yNSA9IF9hcHBseURlY29yYXRlZERlc2NyaXB0b3IoX2NsYXNzLnByb3RvdHlwZSwgXCJ0aXRsZW1pblwiLCBbX2F1cmVsaWFGcmFtZXdvcmsuYmluZGFibGVdLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgd3JpdGFibGU6IHRydWUsXG4gIGluaXRpYWxpemVyOiBudWxsXG59KSwgX2Rlc2NyaXB0b3I2ID0gX2FwcGx5RGVjb3JhdGVkRGVzY3JpcHRvcihfY2xhc3MucHJvdG90eXBlLCBcImRlZmF1bHRcIiwgW19hdXJlbGlhRnJhbWV3b3JrLmJpbmRhYmxlXSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGVudW1lcmFibGU6IHRydWUsXG4gIHdyaXRhYmxlOiB0cnVlLFxuICBpbml0aWFsaXplcjogbnVsbFxufSkpLCBfY2xhc3MpO1xuZXhwb3J0cy5DaGVja2JveCA9IENoZWNrYm94O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tib3guanMubWFwXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/checkbox\n");

/***/ }),

/***/ "aurelia-bodylight-plugin/elements/checkbox.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/aurelia-bodylight-plugin/dist/native-modules/elements/checkbox.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template bindable=\\\"default,title,min,max,titlemin,titlemax\\\">\\n    <div class=\\\"slidecontainer\\\">\\n        <input class=\\\"w3-check\\\" type=\\\"checkbox\\\" checked.two-way=\\\"isChecked\\\" value.bind=\\\"isChecked?max:min\\\"/> <label>${isChecked?titlemax:titlemin}</label>\\n    </div>\\n</template>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2VsZW1lbnRzL2NoZWNrYm94Lmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXVyZWxpYS1ib2R5bGlnaHQtcGx1Z2luL2Rpc3QvbmF0aXZlLW1vZHVsZXMvZWxlbWVudHMvY2hlY2tib3guaHRtbD9lMjUwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8dGVtcGxhdGUgYmluZGFibGU9XFxcImRlZmF1bHQsdGl0bGUsbWluLG1heCx0aXRsZW1pbix0aXRsZW1heFxcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcInNsaWRlY29udGFpbmVyXFxcIj5cXG4gICAgICAgIDxpbnB1dCBjbGFzcz1cXFwidzMtY2hlY2tcXFwiIHR5cGU9XFxcImNoZWNrYm94XFxcIiBjaGVja2VkLnR3by13YXk9XFxcImlzQ2hlY2tlZFxcXCIgdmFsdWUuYmluZD1cXFwiaXNDaGVja2VkP21heDptaW5cXFwiLz4gPGxhYmVsPiR7aXNDaGVja2VkP3RpdGxlbWF4OnRpdGxlbWlufTwvbGFiZWw+XFxuICAgIDwvZGl2PlxcbjwvdGVtcGxhdGU+XCI7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///aurelia-bodylight-plugin/elements/checkbox.html\n");

/***/ })

}]);